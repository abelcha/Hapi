{"version":3,"sources":["app.js","main-controller.js","routes.js","Filters/contactFilter.js","Filters/crlf.js","Filters/french-numers.js","Filters/loginify.js","Filters/relativeDate.js","Filters/reverse.js","Filters/tableFilter.js","Directives/absence-sst.js","Directives/allowPatern.js","Directives/capitalize.js","Directives/context-menu.js","Directives/credit-card.js","Directives/dropdown-row.js","Directives/elastic-textarea.js","Directives/enter.js","Directives/historique-sst.js","Directives/info-comment.js","Directives/info-litige.js","Directives/info-paiement.js","Directives/info-sav.js","Directives/lineup.js","Directives/rightClick.js","Directives/sideLink.js","Directives/signalement.js","Services/-tabs.js","Services/Signalement.js","Services/TabContainer.js","Services/address.js","Services/api.js","Services/artisanClass.js","Services/contextMenu.js","Services/dataProvider.js","Services/date-select.js","Services/devisClass.js","Services/dialog.js","Services/fourniture.js","Services/interventionClass.js","Services/lazy-scroll.js","Services/map.js","Services/mapAutocomplete.js","Services/openPost.js","Services/productsList.js","Services/socketFactory.js","Services/taskList.js","Services/user.js","Templates/info-appel-sst.js","Templates/info-facture.js","Templates/info-fourniture.js","Templates/main-navbar.js","Pages/Archives/archivesController.js","Pages/Artisan/artisan-categorie.js","Pages/Artisan/artisanController.js","Pages/Dashboard/dashboardController.js","Pages/ContactArtisan/contactArtisanController.js","Pages/LPA/LPA.js","Pages/Intervention/artisanFileUpload.js","Pages/Intervention/autocomplete-map.js","Pages/Intervention/credit-card.js","Pages/Intervention/devisController.js","Pages/Intervention/info-categorie.js","Pages/Intervention/info-client.js","Pages/Intervention/info-compta.js","Pages/Intervention/info-produit.js","Pages/Intervention/interventionController.js","Pages/ListeArtisan/listeArtisanController.js","Pages/ListeDevis/listeDevisController.js","Pages/ListeInterventions/listeInterventionsController.js","Pages/Search/searchController.js","Pages/ListeSignalements/liste-signalements.js","Pages/Stats/stats-new.js","Pages/Stats/stats.js","Pages/Avoirs/avoirs.js","Pages/Tools/commissions.js","Pages/Tools/edit-combos.js","Pages/Tools/edit-comptes.js","Pages/Tools/edit-products.js","Pages/Tools/edit-signalements.js","Pages/Tools/edit-users.js","Pages/Tools/telephoneMatch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACffjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtrljVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChveA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxvBA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrvlxIA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["angular.module('edison', ['chart.js','browserify', 'ui.slimscroll', 'ngMaterial', 'lumx', 'ngAnimate', 'xeditable', 'btford.socket-io', 'ngFileUpload', 'pickadate', 'ngRoute', 'ngResource', 'ngTable', 'ngMap'])\n    .config(function($mdThemingProvider) {\n        \"use strict\";\n        $mdThemingProvider.theme('default')\n            .primaryPalette('indigo')\n            .accentPalette('blue-grey');\n    })\n    .run(function(editableOptions) {\n        \"use strict\";\n        editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n    }).run(function($templateCache, $route, $http) {\n        var url;\n        for (var i in $route.routes) {\n            if (url = $route.routes[i].templateUrl) {\n                $http.get(url, {\n                    cache: $templateCache\n                });\n            }\n        }\n        $http.get(\"/Directives/dropdown-row.html\", {\n            cache: $templateCache\n        });\n\n        $http.get(\"/Templates/artisan-categorie.html\", {\n            cache: $templateCache\n        });\n        $http.get(\"/Templates/info-client.html\", {\n            cache: $templateCache\n        });\n        $http.get(\"/Templates/info-categorie.html\", {\n            cache: $templateCache\n        });\n        $http.get(\"/Templates/autocomplete-map.html\", {\n            cache: $templateCache\n        });\n    }).config(function($compileProvider) {\n        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|callto|mailto|file|tel):/);\n    });\n","angular.module('edison').controller('MainController', function($timeout, LxNotificationService,dialog, $q, DataProvider, TabContainer, $scope, socket, config, $rootScope, $location, edisonAPI, taskList, $window) {\n    \"use strict\";\n\n    $rootScope.app_users = app_users;\n    $rootScope.displayUser = app_session\n    $scope.sidebarHeight = $(\"#main-menu-bg\").height();\n    $scope.config = config;\n    $scope._ = _;\n    $rootScope.loadingData = true;\n    $rootScope.$on('$routeChangeSuccess', function() {\n        $window.scrollTo(0, 0);\n        $rootScope.loadingData = false;\n    });\n    var _this = this;\n\n    $rootScope.toggleSidebar = function(open) {\n        if ($rootScope.sideBarMode === true) {\n            $rootScope.sideBarIsClosed = open;\n        }\n    }\n\n    $rootScope.toggleSidebarMode = function(newVal) {\n        $rootScope.sideBarMode = _.isUndefined(newVal) ? !$rootScope.sideBarMode : newVal;\n        $rootScope.sideBarIsClosed = $rootScope.sideBarMode\n    }\n\n    var checkResize = function() {\n        $rootScope.smallWin = window.innerWidth < 1350\n        return $rootScope.toggleSidebarMode($rootScope.smallWin);\n    }\n    $(window).resize(checkResize);\n    checkResize();\n\n\n    $scope.dateFormat = moment().format('llll').slice(0, -5);\n    /*    $scope.$watch('tabs.selectedTab', function(prev, curr) {\n            if (prev === -1 && curr !== -1) {\n                $scope.tabs.selectedTab = curr;\n            }\n        });*/\n    $rootScope.options = {\n        showMap: true\n    };\n\n\n    var getSignalementStats = function() {\n        edisonAPI.signalement.stats().then(function(resp) {\n            $scope.signalementStats = resp.data;\n        })\n    }\n    getSignalementStats()\n\n    var reloadStats = function() {\n        console.log('reloadStats')\n        edisonAPI.stats.telepro()\n            .success(function(result) {\n                $scope.userStats = _.find(result, function(e) {\n                    return e.login === $scope.user.login;\n                });\n                $rootScope.interventionsStats = result;\n            });\n\n        edisonAPI.intervention.dashboardStats({\n                date: moment().startOf('day').toDate()\n            })\n            .then(function(resp) {\n                _this.statsTeleproBfm = _.sortBy(resp.data.weekStats, 'total').reverse().slice(0, 6)\n            });\n\n    };\n\n    $rootScope.user = window.app_session\n    reloadStats();\n    socket.on('filterStatsReload', _.debounce(reloadStats, _.random(0, 1000)));\n\n    $window.notify = function() {\n        LxNotificationService.notify(\"test\", 'android', false, \"red\");\n    }\n\n    socket.on('notification', function(data) {\n        if (data.dest === $rootScope.user.login && (data.dest !== data.origin || data.self)) {\n            LxNotificationService.notify(data.message, data.icon || 'android', false, data.color);\n        }\n        if (data.service && data.service === $rootScope.user.service) {\n            LxNotificationService.notify(data.message, data.icon || 'android', false, data.color);\n        }\n    })\n\n\n    $rootScope.openTab = function(tab) {\n\n    }\n\n    $rootScope.closeContextMenu = function(ev) {\n        $rootScope.$broadcast('closeContextMenu');\n    }\n\n    var devisDataProvider = new DataProvider('devis')\n    var artisanDataProvider = new DataProvider('artisan')\n    var interventionDataProvider = new DataProvider('intervention')\n\n\n\n\n    this.tabContainer = TabContainer;\n    $scope.$on(\"$locationChangeStart\", function(event) {\n        if (_.includes([\"/intervention\", '/devis', '/artisan', '/'], $location.path())) {\n            return 0\n        }\n        TabContainer.add($location).order();\n    })\n\n\n    $scope.taskList = taskList;\n\n    $scope.linkClick = function($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n    };\n\n\n    Mousetrap.bind(['command+i', 'ctrl+i'], function() {\n        dialog.declareBug(_this.tabContainer, function(err, resp) {\n            console.log(resp);\n            edisonAPI.bug.declare(resp).then(function() {\n                LxNotificationService.error(\"Le Serice informatique en a été prevenu\");  \n            })\n           /* edisonAPI.intervention.save(_this).then(function(resp) {\n                LxNotificationService.success(\"L'intervention \" + _this.id + \" est modifié\");\n            }, function(err) {\n                LxNotificationService.error(\"Une erreur est survenu (\" + err.data + \")\");\n            });*/\n        })\n    });\n\n\n    $scope.tabIconClick = function($event, tab) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.tabs.close(tab)\n    };\n});\n","var getIntervention = function($route, $q, edisonAPI) {\n    \"use strict\";\n    var id = $route.current.params.id;\n    if ($route.current.params.d) {\n        var deferred = $q.defer();\n        $q.all([\n            edisonAPI.devis.get($route.current.params.d, {\n                select: 'date login produits tva client prixAnnonce categorie -_id'\n            }),\n            edisonAPI.intervention.getTmp(0)\n        ]).then(function(result) {\n            deferred.resolve(_.merge(result[1], result[0]));\n        })\n        return deferred.promise;\n\n    } else if (id.length > 10) {\n        return edisonAPI.intervention.getTmp(id);\n    } else {\n        return edisonAPI.intervention.get(id, {\n            populate: 'sst'\n        });\n    }\n};\n\nvar statsTelepro = function($route, $q, edisonAPI) {\n    return edisonAPI.stats.telepro()\n}\n\nvar getDevis = function($route, $q, edisonAPI) {\n    \"use strict\";\n    var id = $route.current.params.id;\n    if ($route.current.params.i) {\n        return edisonAPI.intervention.get($route.current.params.i, {\n            select: 'client categorie tva -_id'\n        });\n    } else if (id.length > 10) {\n        return edisonAPI.devis.getTmp(id);\n    } else {\n        return edisonAPI.devis.get(id);\n    }\n};\nvar getArtisan = function($route, $q, edisonAPI) {\n    \"use strict\";\n    var id = $route.current.params.id;\n    if (id.length > 10) {\n        return edisonAPI.artisan.getTmp(id);\n    } else {\n        return edisonAPI.artisan.get(id);\n    }\n}\n\nangular.module('edison').config(function($routeProvider, $locationProvider) {\n    \"use strict\";\n    $routeProvider\n        .when('/', {\n            redirectTo: '/dashboard',\n        })\n        .when('/intervention/list', {\n            templateUrl: \"Pages/ListeInterventions/listeInterventions.html\",\n            controller: \"ListeInterventionController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n\n        })\n        .when('/intervention/list/:fltr', {\n            templateUrl: \"Pages/ListeInterventions/listeInterventions.html\",\n            controller: \"ListeInterventionController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n\n        })\n        .when('/intervention', {\n            redirectTo: function(routeParams, path, params) {\n                var url = params.devis ? \"?d=\" + params.devis : \"\";\n                return '/intervention/' + Date.now() + url;\n            }\n        })\n        .when('/intervention/:id', {\n            templateUrl: \"Pages/Intervention/intervention.html\",\n            controller: \"InterventionController\",\n            controllerAs: \"vm\",\n            reloadOnSearch: false,\n            resolve: {\n                interventionPrm: getIntervention,\n            }\n        })\n        .when('/devis/list', {\n            templateUrl: \"Pages/ListeDevis/listeDevis.html\",\n            controller: \"ListeDevisController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n\n        })\n        .when('/devis/list/:fltr', {\n            templateUrl: \"Pages/ListeDevis/listeDevis.html\",\n            controller: \"ListeDevisController\",\n            controllerAs: \"vm\",\n            reloadOnSearch: false\n\n        })\n        .when('/devis', {\n            redirectTo: function(routeParams, path, params) {\n                var url = params.i ? \"?i=\" + params.i : \"\";\n                return '/devis/' + Date.now() + url;\n            }\n        })\n        .when('/devis/:id', {\n            templateUrl: \"Pages/Intervention/devis.html\",\n            controller: \"DevisController\",\n            controllerAs: \"vm\",\n            resolve: {\n                devisPrm: getDevis,\n            }\n        })\n        .when('/artisan/contact', {\n            templateUrl: \"Pages/ListeArtisan/contactArtisan.html\",\n            controller: \"ContactArtisanController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        })\n        .when('/artisan/:sstid/recap', {\n            templateUrl: \"Pages/ListeArtisan/contactArtisan.html\",\n            controller: \"ContactArtisanController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n\n        })\n        .when('/artisan/list', {\n            templateUrl: \"Pages/ListeArtisan/listeArtisan.html\",\n            controller: \"ListeArtisanController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n\n        })\n        .when('/artisan/list/:fltr', {\n            templateUrl: \"Pages/ListeArtisan/listeArtisan.html\",\n            controller: \"ListeArtisanController\",\n            controllerAs: \"vm\",\n            reloadOnSearch: false\n\n        })\n        .when('/artisan', {\n            redirectTo: function() {\n                return '/artisan/' + Date.now();\n            }\n        })\n        .when('/artisan/:id', {\n            templateUrl: \"Pages/Artisan/artisan.html\",\n            controller: \"ArtisanController\",\n            controllerAs: \"vm\",\n            resolve: {\n                artisanPrm: getArtisan,\n            }\n        })\n        .when('/dashboard', {\n            controller: 'DashboardController',\n            templateUrl: \"Pages/Dashboard/dashboard.html\",\n            controllerAs: \"vm\",\n            resolve: {\n                statsTelepro: statsTelepro\n            }\n        })\n        .when('/search/:query', {\n            templateUrl: \"Pages/Search/search.html\",\n            controller: \"SearchController\",\n            controllerAs: \"vm\",\n        })\n        .when('/compta/lpa', {\n            templateUrl: \"Pages/LPA/LPA.html\",\n            controller: \"LpaController\",\n            controllerAs: \"vm\",\n        })\n        .when('/compta/avoirs', {\n            templateUrl: \"Pages/Avoirs/avoirs.html\",\n            controller: \"avoirsController\",\n            controllerAs: \"vm\",\n        })\n        .when('/compta/archivesPaiement', {\n            templateUrl: \"Pages/Archives/archives.html\",\n            controller: \"archivesPaiementController\",\n            controllerAs: \"vm\",\n        })\n        .when('/compta/archivesReglement', {\n            templateUrl: \"Pages/Archives/archives.html\",\n            controller: \"archivesReglementController\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/telephoneMatch', {\n            templateUrl: \"Pages/Tools/telephoneMatch.html\",\n            controller: \"telephoneMatch\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/editProducts', {\n            templateUrl: \"Pages/Tools/edit-products.html\",\n            controller: \"editProducts\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/editSignalements', {\n            templateUrl: \"Pages/Tools/edit-signalements.html\",\n            controller: \"editSignalements\",\n            controllerAs: \"vm\",\n        })\n        .when('/listeSignalements', {\n            templateUrl: \"Pages/ListeSignalements/liste-signalements.html\",\n            controller: \"listeSignalements\",\n            controllerAs: \"vm\",\n            // reloadOnSearch: false\n        })\n        .when('/tools/editComptes', {\n            templateUrl: \"Pages/Tools/edit-comptes.html\",\n            controller: \"editComptes\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/editCombos', {\n            templateUrl: \"Pages/Tools/edit-combos.html\",\n            controller: \"editCombos\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/editUsers', {\n            templateUrl: \"Pages/Tools/edit-users.html\",\n            controller: \"editUsers\",\n            controllerAs: \"vm\",\n        })\n        .when('/tools/commissions', {\n            templateUrl: \"Pages/Tools/commissions.html\",\n            controller: \"CommissionsController\",\n            controllerAs: \"vm\",\n            reloadOnSearch: false\n\n        })\n        .when('/stats/:type', {\n            templateUrl: \"Pages/Stats/stats.html\",\n            controller: \"StatsController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        })\n         .when('/statsnew/:type', {\n            templateUrl: \"Pages/Stats/stats-new.html\",\n            controller: \"StatsNewController\",\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        })\n        .otherwise({\n            redirectTo: '/dashboard'\n        });\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n});\n","angular.module(\"edison\").filter('contactFilter', ['config', function(config) {\n    \"use strict\";\n\n    var clean = function(str) {\n        return _.deburr(str).toLowerCase();\n    }\n\n    var compare = function(a, b, strictMode) {\n        if (typeof a === \"string\") {\n            return clean(a).includes(b);\n        } else if (!strictMode) {\n            return clean(String(a)).startsWith(b);\n        } else {\n            return a === parseInt(b);\n        }\n    }\n    return function(dataContainer, input) {\n        var rtn = [];\n        input = clean(input);\n        _.each(dataContainer, function(data) {\n            if (!data.stringify)\n                data.stringify = clean(JSON.stringify(data))\n            if (!input || data.stringify.indexOf(input) >= 0) {\n                rtn.push(data);\n            } else {\n            }\n        })\n        return rtn;\n    }\n}]);\n","angular.module('edison').filter('crlf', function() {\n\t\"use strict\";\n    return function(text) {\n        return text.split(/\\n/g).join('<br>');\n    };\n});\n"," angular.module('edison').filter('frnbr', function() {\n \t\"use strict\";\n \treturn function(num) {\n \t\tvar n = _.round((num || 0), 2).toString(),\n \t\t\tp = n.indexOf('.');\n \t\treturn n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, function($0, i) {\n \t\t\treturn (p < 0 || i < p ? ($0 + ' ') : $0).replace('.', ',');\n \t\t});\n \t};\n });\n","angular.module('edison').filter('loginify', function() {\n    \"use strict\";\n    return function(obj) {\n        if (!obj)\n            return \"\";\n        return obj.slice(0, 1).toUpperCase() + obj.slice(1, -2)\n    };\n});\n","angular.module('edison').filter('relativeDate', function() {\n    \"use strict\";\n    return function(date, smallWin) {\n        var d = moment((date + 137000000) * 10000);\n        var l = moment().subtract(4, 'days');\n        if (d < l) {\n            return smallWin ? d.format('DD/MM') : d.format('DD/MM/YY')\n        } else {\n            var x = d.fromNow().toString()\n            if (smallWin) {\n                x = x\n                    .replace('quelques secondes', '')\n                    .replace(' minutes', 'mn')\n                    .replace(' minute', 'mn')\n                    .replace(' une', '1')\n                    .replace(' heures', 'H')\n                    .replace(' heure', 'H')\n                    .replace(' jours', 'J')\n                    .replace(' jour', 'J')\n                    .replace('il y a', '-')\n                    .replace(' un', '1')\n                    .replace('dans ', '+')\n            }\n            return x;\n        }\n        // return moment((date + 1370000000) * 1000).fromNow(no).toString()\n    };\n});\n","angular.module('edison').filter('reverse', function() {\n    \"use strict\";\n    return function(items) {\n        if (!items)\n            return [];\n        return items.slice().reverse();\n    };\n});\n","angular.module(\"edison\").filter('tableFilter', ['config', function(config) {\n    \"use strict\";\n\n    var clean = function(str) {\n        return _.deburr(str).toLowerCase();\n    }\n\n    var compare = function(a, b, strictMode) {\n        if (typeof a === \"string\") {\n            return clean(a).includes(b);\n        } else if (!strictMode) {\n            return clean(String(a)).startsWith(b);\n        } else {\n            return a === parseInt(b);\n        }\n    }\n    var compareCustom = function(key, data, input) {\n        if (key === '_categorie') {\n            var cell = config.categoriesHash()[data.c].long_name;\n            return compare(cell, input);\n        }\n        if (key === '_etat') {\n            var cell = config.etatsHash()[data.s].long_name\n            return compare(cell, input);\n        }\n        return true;\n\n    }\n    var compareDate = function(key, data, input) {\n        var md = (data[key] + 137000000) * 10000;\n        //console.log( input.start, input.end);\n        if (md > input.start.getTime() && md < input.end.getTime()) {\n            return true\n        }\n        return false;\n    }\n\n    var parseDate = function(e) {\n        if (!(/^[0-9\\/]+$/).test(e) ||  _.endsWith(e, '/')) {\n            return undefined;\n        }\n        var x = e.split('/');\n        if (x.length === 1) {\n            var month = parseInt(x[0]);\n            var year = new Date().getFullYear();\n            return {\n                start: new Date(year, month - 1),\n                end: new Date(year, month)\n            }\n        } else if (x.length === 2)  {\n\n            if (x[1].length == 4) {\n                var month = parseInt(x[0]);\n                var year = parseInt(x[1]);\n                return {\n                    start: new Date(year, month - 1),\n                    end: new Date(year, month),\n                }\n            }\n\n            var day = parseInt(x[0]);\n            var month = parseInt(x[1]);\n            var year = new Date().getFullYear();\n            return {\n                start: new Date(year, month - 1, day),\n                end: new Date(year, month - 1, day + 1)\n            }\n        }\n        return undefined;\n    }\n\n\n    return function(dataContainer, inputs, strictMode) {\n        var rtn = [];\n        //console.time('fltr')\n        inputs = _.mapValues(inputs, clean);\n        _.each(inputs, function(e, k) {\n            if (k.charAt(0) === '∆') {\n                inputs[k] = parseDate(e);\n            }\n        })\n\n        _.each(dataContainer, function(data) {\n                if (data.id) {\n                    var psh = true;\n                    _.each(inputs, function(input, k) {\n                        if (input && _.size(input) > 0) {\n                            if (k.charAt(0) === '_') {\n                                if (!compareCustom(k, data, input)) {\n                                    psh = false;\n                                    return false\n                                }\n                            } else if (k.charAt(0) === '∆') {\n                                if (!compareDate(k.slice(1), data, input)) {\n                                    psh = false;\n                                    return false\n                                }\n                            } else {\n                                if (!compare(data[k], input, strictMode)) {\n                                    psh = false;\n                                    return false\n                                }\n                            }\n                        }\n                    });\n                    if (psh === true) {\n                        rtn.push(data);\n                    }\n                }\n            })\n            //console.timeEnd('fltr')\n\n        return rtn;\n    }\n}]);\n"," angular.module('edison').directive('absenceSst', function(edisonAPI, LxNotificationService, user) {\n    \"use strict\";\n    return {\n        replace: false,\n        restrict: 'E',\n        templateUrl: '/Templates/absence-sst.html',\n        scope: {\n            data: '=',\n            exit: '&',\n        },\n        link: function(scope, elem) {\n            scope.absence = {\n                start: moment().add(-1, 'hours').toDate(),\n                end: moment().hour(23).minute(43).toDate()\n            }\n            scope.save = function() {\n                edisonAPI.artisan.absence(scope.data.id, scope.absence).then(function() {\n                    LxNotificationService.success(\"L'absence à été enregistrer\");\n                    (scope.exit || _.noop)();\n                })\n            }\n        }\n    }\n });\n","angular.module('edison').directive('allowPattern', [allowPatternDirective]);\n\nfunction allowPatternDirective() {\n    return {\n        restrict: \"A\",\n        compile: function(tElement, tAttrs) {\n            return function(scope, element, attrs) {\n                // I handle key events\n                element.bind(\"keypress\", function(event) {\n                    var keyCode = event.which || event.keyCode; // I safely get the keyCode pressed from the event.\n                    var keyCodeChar = String.fromCharCode(keyCode); // I determine the char from the keyCode.\n\n                    // If the keyCode char does not match the allowed Regex Pattern, then don't allow the input into the field.\n                    if (!keyCodeChar.match(new RegExp(attrs.allowPattern, \"i\"))) {\n                        event.preventDefault();\n                        return false;\n                    }\n\n                });\n            };\n        }\n    };\n}\n","angular.module('edison').directive('capitalize', function() {\n    \"use strict\";\n    return {\n        require: 'ngModel',\n        link: function(scope, element, attrs, modelCtrl) {\n            modelCtrl.$parsers.push(function(input) {\n                return typeof input === \"string\" ? input.toUpperCase() : \"\";\n            });\n            element.css(\"text-transform\", \"uppercase\");\n        }\n    };\n});\n","","angular.module('edison').directive('creditcard', function() {\n    \"use strict\";\n    return {\n        require: 'ngModel',\n        scope: {\n            inline: \"=\",\n        },\n        link: function(scope, element, attrs, modelCtrl) {\n            modelCtrl.$parsers.push(function(input) {\n                return input.replace('x', 'AAA')\n            });\n        }\n    };\n});\n","angular.module('edison').directive('dropdownRow', function(Devis, productsList, edisonAPI, config, $q, $timeout, Intervention) {\n    \"use strict\";\n\n    return {\n        restrict: 'E',\n        replace: true,\n        templateUrl: '/Directives/dropdown-row.html',\n        scope: {\n            model: \"@\",\n            row: '=',\n        },\n        link: function(scope, element, attrs) {\n            scope._ = _;\n            scope.Intervention = Intervention\n            scope.Devis = Devis\n            scope._model = scope.model || \"intervention\"\n\n            scope.expendedStyle = {\n                height: 0,\n                overflow: 'hidden'\n            };\n            scope.expendedReady = false;\n            scope.data = {};\n            scope.config = config\n            if (scope._model === \"intervention\") {\n                edisonAPI.intervention.get(scope.row.id, {\n                    populate: ['sst', 'devisOrigine'].join(',')\n                }).then(function(result) {\n                    scope.data = result.data;\n                    if (scope.data.produits) {\n                        scope.produits = new productsList(scope.data.produits);\n                    }\n                    scope.client = scope.data.client;\n                    scope.address = scope.client.address;\n\n                })\n\n            } else if (scope._model === \"devis\") {\n                var pAll = [\n                    edisonAPI.devis.get(scope.row.id, {\n                        populate: 'transfertId'\n                    }),\n                ]\n                var pThen = function(result) {\n                    scope.data = result[0].data;\n                    scope.produits = new productsList(scope.data.produits);\n                    scope.hist = scope.data.historique\n                    scope.client = scope.data.client;\n                    scope.address = scope.client.address;\n                }\n            } else if (scope._model === 'artisan') {\n                pAll = [\n                    edisonAPI.artisan.get(scope.row.id),\n                    edisonAPI.artisan.getStats(scope.row.id)\n                ]\n                pThen = function(result) {\n                    scope.data = result[0].data;\n                    scope.artisan = scope.data;\n                    scope.artisan.stats = result[1].data;\n                    scope.address = scope.artisan.address\n                }\n            }\n\n            $q.all(pAll).then(pThen)\n            scope.getStaticMap = function() {\n                var q = \"?format=jpg&width=411&height=210px&precision=0&origin=\" + scope.address.lt + \", \" + scope.address.lg;\n                if (_.get(scope, 'data.artisan.address.lt'))\n                    q += \"&destination=\" + scope.data.artisan.address.lt + \", \" + scope.data.artisan.address.lg;\n                else\n                    q += \"&zoom=15\";\n                return \"/api/mapGetStatic\" + q;\n            }\n\n        }\n    };\n});\n","angular.module('edison').directive('elastic', [\n    '$timeout',\n    function($timeout) {\n        return {\n            restrict: 'A',\n            link: function($scope, element) {\n                $scope.initialHeight = $scope.initialHeight || element[0].style.height;\n                var resize = function() {\n                    element[0].style.height = $scope.initialHeight;\n                    element[0].style.height = \"\" + element[0].scrollHeight + \"px\";\n                };\n                element.on(\"input change\", resize);\n                $timeout(resize, 0);\n            }\n        };\n    }\n]);","angular.module('edison').directive('ngEnter', function () {\n    \"use strict\";\n    return function (scope, element, attrs) {\n        element.bind(\"keydown keypress\", function (event) {\n            if(event.which === 13) {\n                scope.$apply(function (){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","angular.module('edison').directive('historiqueSst', function(edisonAPI) {\n    \"use strict\";\n\n    return {\n        restrict: 'E',\n        replace: true,\n        templateUrl: '/Templates/historique-sst.html',\n        scope: {\n            data: \"=\",\n            exit: '&'\n        },\n        link: function(scope, element, attrs) {\n\n            var reload = function() {\n                if (!scope.data || !scope.data.id) {\n                    return 0;\n                }\n                edisonAPI.artisan.fullHistory(scope.data.id).then(function(resp) {\n                    scope.hist = resp.data;\n                })\n            }\n\n            scope.$watch('data.id', reload)\n            scope.check = function(sign) {\n                /*  if (sign.ok)\n                      return 0;*/\n                edisonAPI.signalement.check(sign._id, sign.text).then(function(resp) {\n                    sign = _.merge(sign, resp.data);\n                })\n                scope.exit && scope.exit();\n                console.log('=>', sign)\n            }\n            scope.comment = function() {\n                edisonAPI.artisan.comment(scope.data.id, scope.comm).then(reload)\n                scope.comm = \"\"\n            }\n        }\n    };\n});\n"," angular.module('edison').directive('infoComment', function(user) {\n     \"use strict\";\n     return {\n         replace: false,\n         restrict: 'E',\n         templateUrl: '/Templates/info-comment.html',\n         scope: {\n             data: '=',\n         },\n         link: function(scope, elem, attr) {\n             scope.height = attr.height ||  216;\n             scope.user = user;\n             scope.addComment = function() {\n                 scope.data.comments.push({\n                     login: user.login,\n                     text: scope.commentText,\n                     date: new Date()\n                 })\n                 scope.commentText = \"\";\n             }\n         }\n     }\n });\n"," angular.module('edison').directive('infoLitige', function() {\n     \"use strict\";\n     return {\n         replace: false,\n         restrict: 'E',\n         templateUrl: '/Templates/info-litige.html',\n         scope: {\n             data: '=',\n         },\n         link: function(scope, elem) {\n             scope.$watch('data.litige.description', function(curr, prev) {\n                 if (scope.data.litige && !scope.data.litige.closed && scope.data.litige.description)\n                     scope.data.litige.open = true\n                 if (scope.data.litige && !scope.data.litige.description) {\n                     scope.data.litige.open = false\n                 }\n             })\n         }\n     }\n });\n"," angular.module('edison').directive('infoPaiement', function(config) {\n     \"use strict\";\n     return {\n         replace: false,\n         restrict: 'E',\n         templateUrl: '/Templates/info-paiement.html',\n         scope: {\n             data: '=',\n             artisans: '='\n         },\n         link: function(scope, elem) {\n            scope.config = config;\n         }\n     }\n });\n"," angular.module('edison').directive('infoSav', function(config) {\n     \"use strict\";\n     return {\n         replace: false,\n         restrict: 'E',\n         templateUrl: '/Templates/info-sav.html',\n         scope: {\n             data: '=',\n             artisans: '='\n         },\n         link: function(scope, elem) {\n            scope.config = config;\n         }\n     }\n });\n"," var Controller = function($timeout, TabContainer, FiltersFactory, user, ContextMenu, LxProgressService, edisonAPI, DataProvider, $routeParams, $location, $rootScope, $filter, config, ngTableParams, DateSelect) {\n    var _this = this;\n    _this._ = _;\n    LxProgressService.circular.show('#5fa2db', '#globalProgress');\n    var currentFilter;\n    var currentHash = $location.hash();\n    var dataProvider = new DataProvider(_this.model, $routeParams.hashModel);\n    var filtersFactory = new FiltersFactory(_this.model)\n\n\n    if ($routeParams.fltr) {\n        currentFilter = filtersFactory.getFilterByUrl($routeParams.fltr)\n    }\n    var dateSelect = new DateSelect(moment().add(-12).toDate());\n    _this.dateSelectList = dateSelect.list();\n    _this.routeParamsFilter = $routeParams.fltr;\n    if (_this.embedded) {\n        _this.$watch('filter', function() {\n            if (_.size(_this.filter)) {\n                _this.customFilter = function(inter) {\n                    for (var i in _this.filter) {\n                        if (_this.filter[i] !== inter[i])\n                            return false\n                    }\n                    return true\n                }\n                if (_this.tableParams) {\n                    dataProvider.applyFilter({}, _this.tab.hash, _this.customFilter);\n                    _this.tableParams.reload();\n                }\n            }\n        })\n\n    }\n\n    _this.displaySubRow = function(inter) {\n        return _this.expendedRow && _this.expendedRow === inter.id;\n    }\n\n    _this.smallWin = window.innerWidth < 1400\n    $(window).resize(function() {\n        _this.smallWin = window.innerWidth < 1400\n    })\n\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.hash = currentHash;\n    _this.config = config;\n    var title = currentFilter ? currentFilter.long_name : _this.model;\n    if ($routeParams.sstid) {\n        var id = parseInt($routeParams.sstid)\n        _this.customFilter = function(inter) {\n            return inter.ai === id;\n        }\n    } else {\n        _this.tab.setTitle(title, currentHash);\n    }\n    if ($routeParams.sstids_in) {\n        _this.customFilter = function(inter) {\n            return _.contains($routeParams.sstids_in, inter.id);\n        }\n    }\n    if ($routeParams.ids_in) {\n        var tab = JSON.parse($routeParams.ids_in)\n        _this.customFilter = function(inter) {\n            return _.contains(tab, inter.id);\n        }\n    }\n\n\n    _this.$watch(function() {\n        return $location.search()\n    }, _.after(2, function(nw, old) {\n        _this.tableParams.filter(_.omit(nw, 'hashModel', 'page', 'sstid', 'ids_in'))\n    }), true)\n\n    _this.$watch(function() {\n        return $location.hash()\n    }, function(nw, old) {\n        if (_this.tableParams) {\n            dataProvider.applyFilter(currentFilter, nw, _this.customFilter);\n            _this.tableParams.reload()\n        }\n    }, true)\n\n\n    var actualiseUrl = function(fltrs, page) {\n        $location.search('page', page !== 1 ? page : undefined);\n        _.each(fltrs, function(e, k) {\n            if (!e) e = undefined;\n            if (e !== \"hashModel\") {\n                $location.search(k, e);\n\n            } else {}\n        })\n    }\n\n    var sortBy = (currentFilter && currentFilter.sortBy) ||  {\n        id: 'desc'\n    }\n    dataProvider.init(function(err, resp) {\n\n\n        dataProvider.applyFilter(currentFilter, _this.tab.hash, _this.customFilter);\n        var tableParameters = {\n            page: $location.search()['page'] ||  1,\n            total: dataProvider.filteredData.length,\n            filter: _this.embedded ? {} : _.omit($location.search(), 'hashModel', 'page', 'sstid', 'ids_in'),\n            sorting: sortBy,\n            count: _this.limit || 100\n        };\n        var tableSettings = {\n            total: dataProvider.filteredData,\n            getData: function($defer, params) {\n                //actualiseUrl(params.filter(), params.page())\n                var data = dataProvider.filteredData;\n                if (!_this.embedded) {\n                    data = $filter('tableFilter')(data, params.filter());\n                }\n                _this.currentFilter = _.clone(params.filter());\n                params.total(data.length);\n                data = $filter('orderBy')(data, params.orderBy());\n                $defer.resolve(data.slice((params.page() - 1) * params.count(), params.page() * params.count()));\n            },\n            filterDelay: 100\n        }\n        _this.tableParams = new ngTableParams(tableParameters, tableSettings);\n        LxProgressService.circular.hide()\n    })\n\n    var lastChange = 0;\n    $rootScope.$on(_this.model.toUpperCase() + '_CACHE_LIST_CHANGE', function(event, newData) {\n        if (TabContainer.getCurrentTab() && _this.tab.fullUrl === TabContainer.getCurrentTab().fullUrl) {\n            dataProvider.applyFilter(currentFilter, _this.tab.hash, _this.customFilter);\n            _this.tableParams.reload();\n            //_this.tableParams.orderBy(_this.tableParams.$params.sorting)\n            //_this.tableParams.filter(_this.tableParams.$params.filter)\n        }\n    })\n\n\n    _this.contextMenu = new ContextMenu(_this.model)\n\n\n    if (user.service === 'COMPTABILITE') {\n        var subs = _.findIndex(_this.contextMenu.list, \"title\", \"Appels\");\n        if (subs) {\n            var tmp = _this.contextMenu.list[subs]\n            _this.contextMenu.list.splice(subs, 1);\n            _this.contextMenu.list.push(tmp);\n        }\n    }\n    _this.rowRightClick = function($event, inter) {\n        edisonAPI[_this.model].get(inter.id, {\n                populate: 'sst'\n            })\n            .then(function(resp) {\n                _this.contextMenu.setData(resp.data);\n                _this.contextMenu.setPosition($event.pageX - (($routeParams.sstid ||  _this.embedded) ? 50 : 0), $event.pageY + ($routeParams.sstid ||  _this.embedded ? 0 : 200))\n                _this.contextMenu.open();\n            })\n    }\n\n    _this.rowClick = function($event, inter) {\n        if (_this.contextMenu.active)\n            return _this.contextMenu.close();\n        if ($event.metaKey || $event.ctrlKey) {\n            TabContainer.addTab('/' + _this.model + '/' + inter.id, {\n                title: ('#' + inter.id),\n                setFocus: false,\n                allowDuplicates: false\n            });\n        } else {\n            // $('.drpdwn').remove()\n            if (_this.expendedRow === inter.id) {\n                _this.expendedRow = undefined;\n            } else {\n                _this.expendedRow = inter.id\n            }\n        }\n    }\n }\n\n\n\n angular.module('edison').directive('lineupIntervention', function($timeout, TabContainer, FiltersFactory, user, ContextMenu, LxProgressService, edisonAPI, DataProvider, $routeParams, $location, $rootScope, $filter, config, ngTableParams, DateSelect) {\n    \"use strict\";\n    var arg = arguments;\n    return {\n        replace: false,\n        restrict: 'E',\n        templateUrl: '/Templates/lineup-intervention.html',\n        scope: {\n            limit: '=',\n            embedded: '=',\n            filter: '=',\n        },\n        controller: function($scope) {\n\n            $scope.model = 'intervention'\n            Controller.apply($scope, arg)\n        }\n    }\n });\n\n angular.module('edison').directive('lineupDevis', function($timeout, TabContainer, FiltersFactory, user, ContextMenu, LxProgressService, edisonAPI, DataProvider, $routeParams, $location, $rootScope, $filter, config, ngTableParams, DateSelect) {\n    \"use strict\";\n    var arg = arguments;\n    return {\n        replace: false,\n        restrict: 'E',\n        templateUrl: '/Templates/lineup-devis.html',\n        scope: {\n            filter: '=',\n        },\n        controller: function($scope) {\n            $scope.model = 'devis'\n            Controller.apply($scope, arg)\n        }\n    }\n });\n\n angular.module('edison').directive('lineupArtisan', function($timeout, TabContainer, FiltersFactory, user, ContextMenu, LxProgressService, edisonAPI, DataProvider, $routeParams, $location, $rootScope, $filter, config, ngTableParams, DateSelect) {\n    \"use strict\";\n    var arg = arguments;\n    return {\n        replace: false,\n        restrict: 'E',\n        templateUrl: '/Templates/lineup-artisan.html',\n        scope: {\n\n        },\n        controller: function($scope) {\n            $scope.model = 'artisan'\n\n            Controller.apply($scope, arg)\n        }\n    }\n });\n","angular.module('edison').directive('ngRightClick', function($parse) {\n    \"use strict\";\n    return function(scope, element, attrs) {\n        element.bind('contextmenu', function(event) {\n            if (!(event.altKey ||  event.ctrlKey || event.shiftKey ||  [\"INPUT\", \"TEXTAREA\"].indexOf(event.target.nodeName) >= 0)) {\n                scope.$apply(function() {\n                    event.preventDefault();\n                    $parse(attrs.ngRightClick)(scope, {\n                        $event: event\n                    });\n                });\n            }\n        });\n    };\n});\n"," angular.module('edison').directive('link', ['FiltersFactory', '$rootScope', function(FiltersFactory, $rootScope) {\n     \"use strict\";\n     return {\n         restrict: 'AE',\n         replace: true,\n         template: '<li>' +\n             '      <a href=\"{{fullUrl}}\" >' +\n             '            <i ng-if=\"icon\" class = \"menu-icon fa fa-{{icon}}\"> </i>' +\n             '            <span ng-class=\"{bold : bold, textWhite: textWhite}\" class=\"mm-text\">{{title || exFltr.long_name}}</span>' +\n             '            <span ng-if=\"total\"class=\"label label-{{_color}}\">{{total}}</span>' +\n             '        </a>' +\n             '      </li>',\n         scope: {\n             fltr: '@',\n             login: '@',\n             today: '@',\n             icon: '@',\n             title: '@',\n             url: '@',\n             textWhite: '@',\n             model: '@',\n             bold: '@',\n             count: '@',\n             noCounter: '@',\n             color: '@',\n             hashModel: '@'\n         },\n         link: function(scope, element, attrs) {\n             var findTotal = function() {\n                if (scope.count) {\n                    return scope.count\n                }\n                 if (scope.noCounter)\n                     return undefined;\n                 var total = 0;\n                 if (scope.login) {\n                     var t = _.find($rootScope.interventionsStats, function(e) {\n                         return e.login === scope.login;\n                     })\n                     total += _.get(t, scope.fltr + '.total', 0);\n                 } else {\n                     _.each($rootScope.interventionsStats, function(t) {\n                         total += _.get(t, scope.fltr + '.total', 0);\n                     })\n                 }\n                 return total;\n             }\n             $rootScope.$watch('interventionsStats', function() {\n                 scope.total = findTotal();\n             })\n             scope.$watch('login', function(current, prev) {\n                 scope._color = (scope.color || 'success')\n                 scope._model = scope.model || 'intervention';\n                 var filtersFactory = new FiltersFactory(scope._model);\n                 scope.exFltr = filtersFactory.getFilterByName(scope.fltr);\n                 scope.total = findTotal();\n                 scope.exFltr = scope.exFltr ||  {\n                     url: ''\n                 };\n                 scope._url = scope.exFltr.url.length ? \"/\" + scope.exFltr.url : scope.exFltr.url;\n                 scope._login = scope.login && !scope.hashModel ? (\"#\" + scope.login) : '';\n                 scope._hashModel = scope.hashModel ? (\"?\" + scope.hashModel + \"=\" + scope.login) : '';\n                 scope.fullUrl = scope.url ||  ('/' + scope._model + '/list' + scope._url + scope._hashModel + scope._login)\n             })\n\n         }\n     };\n }]);\n\n angular.module('edison').directive('simpleLink', ['FiltersFactory', '$rootScope', function(FiltersFactory, $rootScope) {\n     \"use strict\";\n     return {\n         restrict: 'AE',\n         replace: true,\n         template: '<li>' +\n             '      <a href=\"{{url}}\"  target=\"{{target}}\">' +\n             '            <i ng-if=\"icon\" class = \"menu-icon fa fa-{{icon}}\"> </i>' +\n             '            <span class=\"mm-text\">{{title}}</span>' +\n             '        </a>' +\n             '      </li>',\n         scope: {\n             icon: '@',\n             title: '@',\n             url: '@',\n         },\n         link: function(scope, element, attrs) {\n             scope.target = (typeof attrs.extern === 'string' ? '_blank' : '')\n         }\n     };\n }]);\n\n\n angular.module('edison').directive('linkSeparator', [function() {\n     \"use strict\";\n     return {\n         restrict: 'AE',\n         replace: true,\n         template: '<li>' +\n             '      <a>' +\n             '            <i ng-if=\"icon\" class = \"menu-icon fa fa-{{icon}}\"> </i>' +\n             '            <strong><span class=\"mm-text\">{{title}}</span></strong>' +\n             '        </a>' +\n             '      </li>',\n         scope: {\n             icon: '@',\n             title: '@',\n         },\n         link: function(scope, element, attrs) {\n\n         }\n     };\n }]);\n\n\n angular.module('edison').service('sidebarSM', function() {\n\n     var C = function() {\n         this.display = false;\n     };\n     C.prototype.set = function(name, value) {\n         this[name] = value;\n     }\n     return new C();\n\n });\n\n\n\n angular.module('edison').directive('sideBar', ['sidebarSM', function(sidebarSM) {\n     \"use strict\";\n     return {\n         replace: false,\n         restrict: 'E',\n         templateUrl: '/Directives/side-bar.html',\n         transclude: true,\n         scope: {},\n         link: function(scope, element, attrs) {\n             scope.sidebarSM = sidebarSM;\n         }\n     }\n }]);\n\n angular.module('edison').directive('dropDown', ['config', 'sidebarSM', '$timeout', function(config, sidebarSM, $timeout) {\n     \"use strict\";\n\n\n     return {\n         replace: true,\n         restrict: 'E',\n         templateUrl: '/Directives/dropdown.html',\n         transclude: true,\n         scope: {\n             title: '@',\n             icon: '@',\n             isOpen: '@',\n             openDefault: '&'\n         },\n         link: function(scope, element, attrs) {\n             scope.openDefault = scope.$eval(scope.openDefault)\n             scope.isopen = scope.openDefault\n             scope.toggleSidebar = function($event, $elem) {\n                 var $ul = $(element).find('>ul')\n                 if ($('#main-menu').width() > 200) {\n                     if (scope.isopen) {\n                         $ul.velocity({\n                             height: 0\n                         }, 200, function() {\n                             scope.$apply(function() {\n                                 scope.isopen = false;\n                             })\n                         });\n                     } else {\n                         $ul.css('height', '100%')\n                         scope.isopen = true\n                     }\n                 } else {\n\n                     $('#mmc-ul > .mmc-wrapper').html($ul.find('> *'));\n                     sidebarSM.set(\"display\", true);\n                     $timeout(function checkHover() {\n                         if (!$('#mmc-ul').is(\":hover\")) {\n                             sidebarSM.set(\"display\", false);\n                             $ul.html($('#mmc-ul > .mmc-wrapper').find(\">*\"))\n                             $('#mmc-ul > .mmc-wrapper').html('');\n                         } else {\n                             $timeout(checkHover, 1000);\n                         }\n                     }, 1000)\n                 }\n             }\n         }\n     };\n }]);\n"," angular.module('edison').directive('signalement', function(edisonAPI, LxNotificationService) {\n    \"use strict\";\n    return {\n        replace: false,\n        restrict: 'E',\n        templateUrl: '/Templates/signalement.html',\n        scope: {\n            data: '=',\n            exit: '&',\n        },\n        link: function(scope, elem) {\n            scope.setSelectedSubType = function(subType) {\n                scope.selectedSubType = scope.selectedSubType === subType ? null : subType\n            }\n            edisonAPI.signal.list().then(function(resp) {\n                scope.signalementsGrp = _.groupBy(resp.data, 'subType');\n            })\n            scope.hide = function(signal) {\n\n                edisonAPI.signalement.add(_.merge(signal, {\n                    inter_id: scope.data.id || scope.data.tmpID,\n                    sst_id: scope.data.sst && scope.data.sst.id,\n                    sst_nom: scope.data.sst && scope.data.sst.nomSociete\n                })).then(function() {\n                    LxNotificationService.success(\"Le service \" + signal.service.toLowerCase() + \" en a été notifié\");\n                })\n                console.log('EXIT')\n                return scope.exit && scope.exit()\n            }\n        }\n    }\n });\n","angular.module('edison').factory('TabContainer', ['$location', '$window', '$q', 'edisonAPI', function($location, $window, $q, edisonAPI) {\n    \"use strict\";\n    var Tab = function(args, options, prevTab) {\n\n        if (typeof args === 'object') {\n            //copy constructor\n            _.each(args, function(e, k) {\n                this[k] = e;\n            })\n        } else {\n            this.prevTab = prevTab ||  {}\n            this.urlFilter = options.urlFilter\n            this.hash = options.hash\n            this.url = args;\n            this.fullUrl = this.url + ['', $.param(this.urlFilter)].join(_.isEmpty(this.urlFilter) ? '' : '?') + (this.hash ? '#' + this.hash : '')\n            this.title = '';\n            this.position = null;\n            this.deleted = false;\n            this._timestamp = Date.now();\n        }\n    }\n\n    Tab.prototype.setData = function(data) {\n        //slice create a copy\n        this.data = data;\n    }\n\n    Tab.prototype.setTitle = function(title, subTitle) {\n        this.title = title;\n    }\n\n    var TabContainer = function() {\n        this._tabs = [];\n        this.selectedTab = 0;\n    }\n\n    TabContainer.prototype.loadSessionTabs = function(currentUrl) {\n        var _this = this;\n\n        return $q(function(resolve, reject) {\n            var currentUrlInSessionTabs = false;\n            edisonAPI.request({\n                fn: \"getSessionData\",\n            }).then(function(result) {\n                _this.selectedTab = result.data.selectedTab;\n                for (var i = 0; i < result.data._tabs.length; i++) {\n                    _this._tabs.push(new Tab(result.data._tabs[i]))\n                    if (result.data._tabs[i].url === currentUrl) {\n                        _this.selectedTab = i;\n                        currentUrlInSessionTabs = true;\n                    }\n                }\n                if (!currentUrlInSessionTabs) {\n                    return reject();\n                }\n                return resolve();\n            }).catch(reject);\n\n        })\n\n    }\n\n    TabContainer.prototype.setFocus = function(tab) {\n        this.selectedTab = (typeof tab === 'number' ? tab : tab.position);\n    };\n\n    TabContainer.prototype.createTab = function(url, options) {\n        var tab = new Tab(url, options, this.getCurrentTab());\n        tab.position = this._tabs.length;\n        this._tabs.push(tab);\n        return (tab);\n    }\n\n    TabContainer.prototype.isOpen = function(url, options) {\n        var index = _.findIndex(this._tabs, function(e) {\n            return !e.deleted && e.url === url &&\n                (!options.hash && !e.hash || options.hash == e.hash) &&\n                _.isEqual(options.urlFilter, e.urlFilter)\n        });\n        return (index >= 0);\n    };\n\n    TabContainer.prototype.getTab = function(url, options) {\n\n        return _.find(this._tabs, function(e) {\n            return !e.deleted && e.url === url &&\n                (!options.hash && !e.hash || options.hash == e.hash) &&\n                _.isEqual(options.urlFilter, e.urlFilter)\n        });\n    };\n\n    TabContainer.prototype.getTabSimple = function(url, options) {\n\n        return _.find(this._tabs, function(e) {\n            return !e.deleted && e.url.split('/')[1] === url.split('/')[1]\n        });\n    };\n\n    TabContainer.prototype.len = function() {\n        var size = 0;\n\n        this._tabs.forEach(function(e) {\n            size += !e.deleted;\n        })\n        return (size);\n    }\n\n    TabContainer.prototype.getPrevTab = function(tab) {\n\n        for (var i = tab.position - 1; i >= 0; i--) {\n            if (this._tabs[i].deleted === false)\n                return (this._tabs[i]);\n        }\n    };\n\n    TabContainer.prototype.close = function(tab) {\n        if (this.len() > 1) {\n            console.log(\"multiple tabs\")\n            if (this.remove(tab)) {\n                $location.url(tab.prevTab.fullUrl ||  '/intervention/list')\n            }\n        } else {\n            console.log(\"only tab\")\n            $location.url(tab.prevTab.fullUrl ||  '/intervention/list');\n            this.noClose = true;\n            //this.remove(tab);\n        }\n    }\n\n    TabContainer.prototype.remove = function(tab) {\n        var newTabs = [];\n        var j = 0;\n\n        if (this._tabs.length <= 1) {\n            return false;\n        }\n        var reload = (this.selectedTab === tab.position);\n        for (var i = 0; i < this._tabs.length; i++) {\n            if (i !== tab.position) {\n                newTabs.push(this._tabs[i]);\n                newTabs[j].position = j;\n                ++j;\n            }\n        }\n        this._tabs = newTabs;\n\n        if (this.selectedTab === tab.position && this.selectedTab !== 0) {\n            this.selectedTab--;\n        }\n        if (this.selectedTab > tab.position) {\n            this.selectedTab--;\n        }\n        return (reload);\n    }\n\n    TabContainer.prototype.getCurrentTab = function() {\n        return this._tabs[this.selectedTab];\n    }\n    TabContainer.prototype.addTab = function(url, options) {\n        var tab;\n        var noOpen = [\n            '/list',\n            '/search',\n            '/recap',\n            'lpa',\n            '/artisan/contact',\n            '/tools/edit',\n        ]\n        if (this.noClose) {\n            tab = this._tabs[0]\n        } else if (_.find(noOpen, _.partial(_.includes, url)) && this.getTabSimple(url)) {\n            tab = this.getTabSimple(url);\n        } else if (this.noClose || this.isOpen(url, options)) {\n            tab = this.getTab(url, options)\n        } else {\n            tab = this.createTab(url, options);\n        }\n        this.noClose = false;\n        if (!(options && options.setFocus === false)) {\n            this.setFocus(tab)\n        }\n        if (options && options.title) {\n            tab.setTitle(options.title);\n        }\n    }\n\n    return (new TabContainer());\n\n}]);\n","angular.module('edison').factory('Signalement', function(edisonAPI) {\n    \"use strict\";\n\n    var Signalement = function(inter) {\n        this.intervention = inter;\n    }\n\n    Signalement.prototype.list = []\n    return Signalement;\n});\n","angular.module('edison').factory('Tab', function() {\n\n\n    var Tab = function(container, location) {\n        this.container = container;\n        this.title = \"...\";\n        this.path = location.path();\n        this.url = location.path().split('/').slice(1)\n        this.model = this.url[0]\n        this.route = this.url[1]\n        this.hash = location.hash();\n        this.title = this.url[this.url.length - 1]\n        this.date = new Date;\n    }\n    Tab.prototype.setTitle = function(title) {\n        this.title = title\n        return this;\n    };\n\n    Tab.prototype.close = function() {\n        this.container.close(this);\n    }\n\n    Tab.prototype.setData = function(data) {\n        this.data = data;\n        return this;\n    };\n    return Tab;\n\n})\n\nangular.module('edison').factory('TabContainer', function(Tab, $location) {\n    \"use strict\";\n\n    var TabContainer = {\n        __tabs: [],\n        __ordered: {}\n    }\n\n\n    TabContainer.find = function(location) {\n        var cmp = new Tab(this, location)\n        return _.find(this.__tabs, function(e) {\n            if (e.route === 'list' && cmp.route === 'list') {\n                return cmp.model === e.model\n            }\n            return e.path == location.path() && e.hash == location.hash()\n        })\n    }\n\n    TabContainer.ordered = function() {\n        return this.__ordered;\n    }\n    TabContainer.close = function(tab) {\n        var index = _.findIndex(this.__tabs, function(e) {\n            return e.path == tab.path && e.hash == location.hash\n        })\n        this.__tabs.splice(index, 1);\n        $location.url((this.prevTab && this.prevTab.path != this.selectedTab.path && this.prevTab.path) ||  '/intervention/list');\n    }\n\n\n\n    TabContainer.add = function(location) {\n        var tab = this.find(location);\n        this.prevTab = this.selectedTab\n        if (!tab) {\n            this.selectedTab = new Tab(this, location);\n            this.__tabs.push(this.selectedTab)\n        } else {\n            this.selectedTab = tab\n        }\n        return this;\n    }\n\n    TabContainer.getCurrentTab = function() {\n        return this.selectedTab;\n    }\n    TabContainer.order = function() {\n        var _this = this;\n        var models = [\"intervention\", \"artisan\", \"devis\", 'tools', 'compta'];\n        var tmp = {};\n        _.each(_this.__tabs, function(e) {\n            if (_.includes(models, e.model) && e.url[1] !== 'list' && e.url[1] !== 'contact') {\n                var dest = _.endsWith(e.model, 's') ? e.model : e.model + 's';\n            } else {\n                dest = 'Recents';\n            }\n            tmp[dest] = tmp[dest] || {\n                title: dest,\n                tabs: []\n            };\n            tmp[dest].tabs.push(e)\n        })\n        this.__ordered = tmp\n        return this;\n    }\n    TabContainer.getOrdered = function() {\n        return this.__ordered;\n    }\n\n\n    return TabContainer\n\n});\n","angular.module('edison').factory('Address', function() {\n    \"use strict\";\n\n    var Address = function(place, copyContructor) {\n        if (place.lat && place.lng) {\n            this.lt = place.lat;\n            this.lg = place.lng;\n        } else if (copyContructor) {\n            this.getAddressProprieties(place);\n            this.streetAddress = true;\n        } else if (this.isStreetAddress(place)) {\n            this.getPlaceProprieties(place);\n        } else if (this.isLocalityAddress(place)) {\n            this.getPlaceLocalityProprieties(place);\n        }\n        if (place.geometry) {\n            this.lt = place.geometry.location.lat();\n            this.lg = place.geometry.location.lng();\n        }\n        this.latLng = this.lt + ', ' + this.lg;\n    };\n\n    Address.prototype.getPlaceLocalityProprieties = function(place) {\n        var a = place.address_components;\n        this.cp = a[1] && a[1].short_name;\n        this.v = a[0] && a[0].short_name;\n    }\n\n    Address.prototype.getPlaceProprieties = function(place) {\n        var a = place.address_components;\n        this.n = a[0] && a[0].short_name;\n        this.r = a[1] && a[1].short_name;\n        this.cp = a[6] && a[6].short_name;\n        this.v = a[2] && a[2].short_name;\n    }\n\n    Address.prototype.getAddressProprieties = function(address) { \n        this.n = address.n;\n        this.r = address.r;\n        this.cp = address.cp;\n        this.v = address.v;\n        this.lt = address.lt;\n        this.lg = address.lg;\n        this.code = address.code;\n        this.etage = address.etage;\n        this.batiment = address.batiment;\n    }\n\n    Address.prototype.isLocalityAddress = function(place) {\n        this.localityAddress = (place.types.indexOf(\"locality\") >= 0);\n        return this.localityAddress;\n    }\n\n    Address.prototype.isStreetAddress = function(place) {\n        var noStreet = [\"locality\", \"country\", \"postal_code\", \"route\", \"sublocality\"];\n        this.streetAddress = (noStreet.indexOf(place.types[0]) < 0);\n        return (this.streetAddress);\n    }\n\n    Address.prototype.toString = function() {\n        return (this.n + \" \" + this.r + \" \" + this.cp + \", \" + this.v + \", France\")\n    }\n\n    return (function(place, copyContructor) {\n        return new Address(place, copyContructor);\n    })\n});\n","angular.module('edison').factory('edisonAPI', ['$http', '$location', 'Upload', function($http, $location, Upload) {\n    \"use strict\";\n    return {\n        bug: {\n            declare: function(params) {\n                return $http.post('/api/bug/declare', params)\n            },\n        },\n        product: {\n            list: function() {\n                return $http.get('/api/product/list');\n            },\n            save: function(data) {\n                return $http.post('/api/product/__save', data);\n            }\n        },\n        signal: {\n            list: function() {\n                return $http.get('/api/signal/list');\n            },\n            save: function(data) {\n                return $http.post('/api/signal/__save', data);\n            }\n        },\n        compte: {\n            list: function() {\n                return $http.get('/api/compte/list');\n            },\n            save: function(data) {\n                return $http.post('/api/compte/__save', data);\n            }\n        },\n        combo: {\n            list: function() {\n                return $http.get('/api/combo/list');\n            },\n            save: function(data) {\n                return $http.post('/api/combo/__save', data);\n            }\n        },\n        stats: {\n            telepro: function() {\n                return $http.get('/api/stats/telepro');\n            },\n            day: function() {\n                return $http.get('/api/stats/day');\n            }\n        },\n        users: {\n            logout: function() {\n                return $http.get('/logout');\n            },\n            save: function(data) {\n                return $http.post('/api/user/__save', data);\n            },\n            list: function() {\n                return $http.get('/api/user/list');\n            }\n        },\n        bfm: {\n            get: function() {\n                return $http.get('/api/bfm');\n            }\n        },\n        compta: {\n            lpa: function(data) {\n                return $http.get('/api/intervention/lpa?d=' + (data.d ||  ''));\n            },\n            flush: function(data) {\n                return $http.post('/api/intervention/flush', data);\n            },\n            flushMail: function(data) {\n                return $http.post('/api/intervention/flushMail', data);\n            },\n            archivesPaiement: function() {\n                return $http.get('/api/intervention/archivePaiement');\n            },\n            archivesReglement: function() {\n                return $http.get('/api/intervention/archiveReglement');\n            },\n            avoirs: function() {\n                return $http.get('/api/intervention/avoirs')\n            },\n            flushAvoirs: function(data) {\n                return $http.post('/api/intervention/flushAvoirs', data);\n            },\n\n        },\n        devis: {\n            saveTmp: function(data) {\n                return $http.post('/api/devis/temporarySaving', data);\n            },\n            getTmp: function(id) {\n                return $http.get('/api/devis/temporarySaving?id=' + id);\n            },\n            get: function(id, options) {\n                return $http({\n                    method: 'GET',\n                    cache: false,\n                    url: '/api/devis/' + id,\n                    params: options || {}\n                }).success(function(result) {\n                    return result;\n                });\n            },\n            save: function(params) {\n                if (!params.id) {\n                    return $http.post(\"/api/devis\", params)\n                } else {\n                    return $http.post(\"/api/devis/\" + params.id, params)\n\n                }\n            },\n            envoi: function(id, options) {\n                return $http.post(\"/api/devis/\" + id + \"/envoi\", options);\n            },\n            annulation: function(id, causeAnnulation) {\n                return $http.post(\"/api/devis/\" + id + \"/annulation\");\n            },\n            list: function() {\n                return $http.get('api/devis/getCacheList')\n            },\n        },\n        intervention: {\n            dashboardStats: function(options) {\n                return $http.get('/api/intervention/dashboardStats', {\n                    params: options\n                });\n            },\n            getTelMatch: function(text) {\n                return $http.post('/api/intervention/telMatches', text);\n            },\n            saveTmp: function(data) {\n                return $http.post('/api/intervention/temporarySaving', data);\n            },\n            getTmp: function(id) {\n                return $http.get('/api/intervention/temporarySaving?id=' + id);\n            },\n            demarcher: function(id) {\n                return $http({\n                    method: 'POST',\n                    url: '/api/intervention/' + id + '/demarcher'\n                })\n            },\n            reactivation: function(id) {\n                return $http.post('api/intervention/' + id + '/reactivation')\n            },\n            list: function() {\n                return $http.get('api/intervention/getCacheList')\n            },\n            get: function(id, options) {\n                return $http({\n                    method: 'GET',\n                    cache: false,\n                    url: '/api/intervention/' + id,\n                    params: options || {}\n                }).success(function(result) {\n                    return result;\n                });\n            },\n            getCB: function(id) {\n                return $http.get(\"/api/intervention/\" + id + \"/CB\");\n            },\n            save: function(params) {\n                if (!params.id) {\n                    return $http.post(\"/api/intervention\", params)\n                } else {\n                    return $http.post(\"/api/intervention/\" + params.id, params)\n\n                }\n            },\n            getFiles: function(id) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/intervention/\" + id + \"/getFiles\"\n                });\n            },\n            verification: function(id, options) {\n                return $http.post(\"/api/intervention/\" + id + \"/verification\", options);\n            },\n            annulation: function(id, options) {\n                return $http.post(\"/api/intervention/\" + id + \"/annulation\", options);\n            },\n            envoi: function(id, options) {\n                return $http.post(\"/api/intervention/\" + id + \"/envoi\", options);\n            },\n            sendFacture: function(id, options) {\n                return $http.post(\"/api/intervention/\" + id + \"/sendFacture\", options);\n            },\n            sendFactureAcquitte: function(id, options) {\n                return $http.post(\"/api/intervention/\" + id + \"/sendFactureAcquitte\", options);\n            },\n            statsBen: function(options) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/intervention/statsBen\",\n                    params: options\n                });\n            },\n            statsBenYear: function(options) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/intervention/statsBenYearly\",\n                    params: options\n                });\n            },\n            commissions: function(options) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/intervention/commissions\",\n                    params: options\n                });\n            },\n            scan: function(id) {\n                return $http.post(\"/api/intervention/\" + id + \"/scan\");\n            }\n        },\n        artisan: {\n            manage: function(id) {\n                return $http.post('/api/artisan/' + id + '/manage')\n            },\n            comment: function(id, text) {\n                return $http.post('/api/artisan/' + id + '/comment', {\n                    text: text\n                })\n            },\n            absence: function(id, absence) {\n                return $http.post('/api/artisan/' + id + '/absence', absence)\n            },\n            needFacturier: function(id) {\n                return $http.post('/api/artisan/' + id + '/needFacturier')\n            },\n            sendFacturier: function(id, facturier, deviseur) {\n                return $http.post('/api/artisan/' + id + '/sendFacturier', {\n                    facturier: facturier,\n                    deviseur: deviseur,\n                });\n            },\n            saveTmp: function(data) {\n                return $http.post('/api/artisan/temporarySaving', data);\n            },\n            fullHistory: function(id) {\n                return $http.get('/api/artisan/' + id + '/fullHistory');\n            },\n            getTmp: function(id) {\n                return $http.get('/api/artisan/temporarySaving?id=' + id);\n            },\n            getCompteTiers: function(id_sst) {\n                return $http.get(['/api/artisan', id_sst, 'compteTiers'].join('/'));\n            },\n            envoiContrat: function(id, options) {\n                return $http.post(\"/api/artisan/\" + id + '/sendContrat', options)\n            },\n            upload: function(file, name, id) {\n                return Upload.upload({\n                    url: '/api/artisan/' + id + \"/upload\",\n                    fields: {\n                        name: name,\n                        id: id\n                    },\n                    file: file\n                })\n            },\n            getFiles: function(id) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/artisan/\" + id + \"/getFiles\"\n                });\n            },\n            extendedStats: function(id) {\n                return $http.get('/api/artisan/' + id + \"/extendedStats\")\n            },\n            statsMonths: function(id) {\n                return $http.get('/api/artisan/' + id + \"/statsMonths\")\n            },\n            save: function(params) {\n                if (!params.id) {\n                    return $http.post(\"/api/artisan\", params)\n                } else {\n                    return $http.post(\"/api/artisan/\" + params.id, params)\n\n                }\n            },\n            list: function(options) {\n                return $http.get('api/artisan/getCacheList')\n            },\n            lastInters: function(id) {\n                return $http({\n                    method: 'GET',\n                    url: '/api/artisan/' + id + '/lastInters',\n                })\n            },\n            get: function(id, options) {\n                return $http({\n                    method: 'GET',\n                    cache: false,\n                    url: '/api/artisan/' + id,\n                    params: options || {}\n                }).success(function(result) {\n                    return result;\n                });\n            },\n            getNearest: function(address, categorie) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/artisan/rank\",\n                    cache: false,\n                    params: {\n                        categorie: categorie,\n                        lat: address.lt,\n                        lng: address.lg,\n                        limit: 150,\n                        maxDistance: 100\n                    }\n                });\n            },\n            getStats: function(id_sst) {\n                return $http({\n                    method: 'GET',\n                    url: \"/api/artisan/\" + id_sst + \"/stats\"\n                });\n            },\n        },\n        task: {\n            add: function(params) {\n                return $http.post('/api/task/add', params)\n            },\n            check: function(id) {\n                return $http.post('/api/task/' + id + '/check')\n            },\n            listRelevant: function(options) {\n                return $http.get('/api/task/relevant', {\n                    params: options\n                });\n            }\n        },\n        signalement: {\n            check: function(id, text) {\n                return $http.post('/api/signalement/' + id + '/check', {\n                    text: text\n                })\n            },\n            add: function(params) {\n                return $http.post('/api/signalement/add', params)\n            },\n            list: function(params) {\n                return $http.get('/api/signalement/list', {\n                    params: params\n                })\n            },\n            stats: function() {\n                return $http.get('/api/signalement/stats')\n            }\n        },\n        file: {\n            uploadScans: function(file, options) {\n                return Upload.upload({\n                    url: '/api/document/uploadScans',\n                    fields: options,\n                    file: file\n                })\n            },\n            upload: function(file, options) {\n                return Upload.upload({\n                    url: '/api/document/upload',\n                    fields: options,\n                    file: file\n                })\n            },\n            scan: function(options) {\n                return $http.post('/api/document/scan', options);\n            }\n        },\n        call: {\n            get: function(origin, link) {\n                return $http({\n                    method: 'GET',\n                    url: '/api/calls/get',\n                    params: {\n                        q: JSON.stringify({\n                            link: link\n                        })\n                    }\n                })\n            },\n            save: function(params) {\n                return $http.post('/api/calls', params);\n            },\n        },\n        sms: {\n            get: function(origin, link) {\n                return $http({\n                    method: 'GET',\n                    url: '/api/sms/get',\n                    params: {\n                        q: JSON.stringify({\n                            link: link,\n                            origin: origin\n                        })\n                    }\n                })\n            },\n            send: function(params) {\n                return $http.post(\"/api/sms/send\", params)\n            },\n\n        },\n        getDistance: function(origin, destination) {\n            return $http({\n                method: 'GET',\n                cache: true,\n                url: '/api/mapGetDistance',\n                params: {\n                    origin: origin,\n                    destination: destination\n                }\n            })\n        },\n        request: function(options) {\n            return $http({\n                method: options.method || 'GET',\n                url: '/api/' + options.fn,\n                params: options.data\n            });\n        },\n        searchPhone: function(tel) {\n            return $http({\n                method: 'GET',\n                url: \"api/arcep/\" + tel + \"/search\"\n            });\n        },\n        getUser: function() {\n            return $http({\n                method: 'GET',\n                cache: true,\n                url: \"/api/whoAmI\"\n            });\n        },\n        searchText: function(text, options) {\n            return $http({\n                method: 'GET',\n                params: options,\n                url: ['api', 'search', text].join('/')\n            })\n        }\n    }\n}]);\n","angular.module('edison')\n    .factory('Artisan', function($window, $rootScope, user, $location, LxNotificationService, LxProgressService, dialog, edisonAPI, textTemplate) {\n        \"use strict\";\n        var Artisan = function(data) {\n            if (!(this instanceof Artisan)) {\n                return new Artisan(data);\n            }\n            for (var k in data) {\n                this[k] = data[k];\n            }\n        }\n\n        var appelLocal = function(tel) {\n            if (tel) {\n                $window.open('callto:' + tel, '_self', false);\n            }\n        }\n\n        Artisan.prototype.callTel1 = function() {\n            appelLocal(this.telephone.tel1)\n        }\n        Artisan.prototype.callTel2 = function() {\n            appelLocal(this.telephone.tel2)\n        }\n\n        Artisan.prototype.typeOf = function() {\n            return 'Artisan';\n        }\n\n        Artisan.prototype.ouvrirFiche = function() {\n            $location.url(\"/artisan/\" + this.id);\n        }\n        Artisan.prototype.ouvrirRecap = function() {\n            $location.url(\"/artisan/\" + this.id + '/recap');\n        }\n        Artisan.prototype.facturierDeviseur = function() {\n            var _this = this;\n            dialog.facturierDeviseur(this, function(facturier, deviseur) {\n                edisonAPI.artisan.sendFacturier(_this.id, facturier, deviseur);\n            })\n        }\n\n        Artisan.prototype.tutelleIn = function(cb) {\n            this.tutelle = true;\n            Artisan(this).save();\n        }\n        Artisan.prototype.tutelleOut = function(cb) {\n            this.tutelle = false;\n            Artisan(this).save();\n        }\n\n        Artisan.prototype.deArchiver = function() {\n            this.status = \"ACT\";\n            Artisan(this).save();\n        }\n        Artisan.prototype.archiver = function() {\n            this.status = \"ARC\";\n            Artisan(this).save();\n        }\n\n        Artisan.prototype.call = function(cb) {\n            var _this = this;\n            var now = Date.now();\n            $window.open('callto:' + _this.telephone.tel1, '_self', false)\n        };\n\n        Artisan.prototype.refuseFacturier = function() {\n            this.demandeFacturier.status = 'NO';\n            Artisan(this).save();\n        }\n\n        Artisan.prototype.needFacturier = function() {\n            if (this.demandeFacturier && moment(this.demandeFacturier.date).isAfter(moment().add(-10, 'days'))) {\n                if (this.demandeFacturier.status === 'PENDING') {\n                    LxNotificationService.error(moment(this.demandeFacturier.date).format(\"[Une demande à deja été éffectué le ]LLL\"));\n                }\n                if (this.demandeFacturier.status === 'OK') {\n                    LxNotificationService.error(\"Un facturier à deja été envoyé dans les 10 derniers jours\");\n                }\n                if (this.demandeFacturier.status === 'NO') {\n                    LxNotificationService.error(\"L'envoi d'un facturier à deja été refusé dans les 10 derniers jours\");\n                }\n                return 0;\n            }\n            edisonAPI.artisan.needFacturier(this.id).then(function(resp) {\n                LxNotificationService.success(\"Une notification a été envoyer au service partenariat\");\n            })\n        }\n\n        Artisan.prototype.save = function(cb) {\n            var _this = this;\n\n            edisonAPI.artisan.save(_this)\n                .then(function(resp) {\n                    LxNotificationService.success(\"Les données ont à été enregistré\");\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n                }).catch(function(error) {\n                    LxNotificationService.error(error.data);\n                    if (typeof cb === 'function')\n                        cb(error.data)\n                });\n        };\n\n\n        Artisan.prototype.manager = function(cb) {\n            var _this = this;\n            _this.login.management = user.login;\n            edisonAPI.artisan.save(_this)\n                .then(function(resp) {\n                    LxNotificationService.success(\"Vous manager désormais \" + _this.nomSociete);\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n                }).catch(function(error) {\n                    LxNotificationService.error(error.data);\n                    if (typeof cb === 'function')\n                        cb(error.data)\n                });\n        };\n\n        Artisan.prototype.upload = function(file, name, cb) {\n            var _this = this;\n            if (file) {\n                LxProgressService.circular.show('#5fa2db', '#fileUploadProgress');\n                edisonAPI.artisan.upload(file, name, _this.id)\n                    .success(function(resp) {\n                        _this.document = resp.document;\n                        LxProgressService.circular.hide();\n                        if (typeof cb === 'function')\n                            cb(null, resp);\n                    }).catch(function(err) {\n                        LxProgressService.circular.hide();\n                        if (typeof cb === 'function')\n                            cb(err);\n                    })\n            }\n        }\n\n        Artisan.prototype.envoiContrat = function(options, cb) {\n            var _this = this;\n            options = options || {};\n            dialog.sendContrat({\n                data: _this,\n                signe: options.signe,\n                text: _.template(textTemplate.mail.artisan.envoiContrat())(_this),\n            }, function(options) {\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.artisan.envoiContrat(_this.id, {\n                    text: options.text,\n                    signe: options.signe\n                }).success(function(resp) {\n                    LxProgressService.circular.hide()\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                });\n            });\n        }\n        Artisan.prototype.rappelContrat = function(cb) {\n            var _this = this;\n            _this.datePlain = moment(_this.date.ajout).format('ll')\n            dialog.sendContrat({\n                data: _this,\n                text: _.template(textTemplate.mail.artisan.rappelContrat())(_this),\n            }, function(options) {\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.artisan.envoiContrat(_this.id, {\n                    text: options.text,\n                    signe: options.signe,\n                    rappel: true\n                }).success(function(resp) {\n                    LxProgressService.circular.hide()\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                });\n            });\n        }\n\n        Artisan.prototype.ouvrirFiche = function() {\n            $location.url(\"/artisan/\" + this.id);\n        }\n        return Artisan;\n    });\n","angular.module('edison').factory('ContextMenu', function($rootScope, $location, edisonAPI, user, $window, $timeout, dialog, Devis, Intervention, Artisan, contextMenuData) {\n    \"use strict\";\n\n    var ContextMenu = function(model) {\n        var _this = this;\n        this.model = model\n        this.list = contextMenuData[model];\n        $rootScope.$on('closeContextMenu', function() {\n            return _this.active && _this.close();\n        })\n        this.style = {\n            left: 0,\n            top: 0,\n            display: \"none\"\n        }\n    }\n\n    ContextMenu.prototype.openSub = function(delay) {\n        var _this = this\n        this.openSubTimeout = $timeout(function() {\n            _this.mouseOverCM = true\n        }, delay || 0)\n\n    }\n\n    ContextMenu.prototype.closeSub = function() {\n        if (this.openSubTimeout) {\n            $timeout.cancel(this.openSubTimeout);\n        }\n        this.mouseOverCM = false\n    }\n\n    ContextMenu.prototype.getData = function() {\n        return this.data;\n    }\n    ContextMenu.prototype.setData = function(data) {\n        this.data = data;\n    }\n\n    ContextMenu.prototype.setPosition = function(x, y) {\n        this.style.left = (x - $('#main-menu-inner').width()) - 4;\n        this.style.top = y - 48;\n    }\n\n    ContextMenu.prototype.active = false;\n\n    ContextMenu.prototype.open = function() {\n        var _this = this;\n        this.closeSub()\n        this.list.forEach(function(e) {\n            if (e.subs) {\n                _.each(e.subs, function(sub) {\n                    sub.hidden = sub.hide && sub.hide(_this.data);\n                })\n            } else {\n                e.hidden = e.hide && e.hide(_this.data, user);\n            }\n        });\n        this.style.display = \"block\";\n        this.active = true;\n        return this\n    }\n\n    ContextMenu.prototype.onClose = function(callback) {\n        this.onCloseCallback = callback;\n    }\n\n    ContextMenu.prototype.close = function() {\n        this.style.display = \"none\";\n        this.active = false;\n        if (this.onCloseCallback) {\n           this.onCloseCallback()\n           this.onCloseCallback = null;\n        }\n\n    }\n\n    ContextMenu.prototype.modelObject = {\n        intervention: Intervention,\n        devis: Devis,\n        artisan: Artisan\n    }\n\n    ContextMenu.prototype.tooltip = function(link) {\n        return _.get(this.data, link.binding, '');\n    }\n\n    ContextMenu.prototype.click = function(link) {\n        if (typeof link.action === 'function') {\n            return link.action(this.getData())\n        } else if (typeof link.action === 'string') {\n            return this.modelObject[this.model]()[link.action].bind(this.data)();\n        } else {\n            console.error(\"error here\")\n        }\n    }\n\n\n    return ContextMenu\n\n});\n","angular.module('edison').factory('DataProvider',function($timeout, edisonAPI, socket, $rootScope, config) {\n    \"use strict\";\n    var DataProvider = function(model, hashModel) {\n        var _this = this;\n        this.model = model;\n        this.hashModel = hashModel || 't';\n        this.rand = new Date\n        socket.on(_this.socketListChange(), function(change) {\n            if (_this.appliedList.indexOf(change.ts) === -1) {\n                _this.appliedList.push(change.ts)\n                _this.updateData(change.data);\n            }\n        });\n    }\n\n    DataProvider.prototype.socketListChange = function() {\n        var _this = this;\n        return _this.model.toUpperCase() + '_CACHE_LIST_CHANGE';\n    }\n    DataProvider.prototype.appliedList = [];\n\n    DataProvider.prototype.data = {}\n\n    DataProvider.prototype.setData = function(data) {\n        this.data[this.model] = data;\n    };\n\n    DataProvider.prototype.init = function(cb) {\n        var _this = this;\n\n        if (_this.getData())\n            return cb(_this.getData());\n        edisonAPI[_this.model].list({\n            cache: true\n        }).success(function(resp) {\n            _this.setData(resp);\n            return cb(null, resp);\n        })\n    }\n\n    DataProvider.prototype.rowFilterFactory = function(filter, hash) {\n        var _this = this;\n        if (!filter && hash) {\n            return function onlyLogin(inter) {\n                return inter[_this.hashModel] === hash;\n            }\n        }\n        if (filter && hash) {\n            return function loginAndFilter(inter) {\n                return inter.f && inter.f[filter.short_name] === 1 && inter[_this.hashModel] === hash;\n            }\n        }\n        if (filter && !hash) {\n            return function onlyFilter(inter) {\n                return inter.f && inter.f[filter.short_name] === 1;\n            }\n        }\n    }\n\n    DataProvider.prototype.applyFilter = function(filter, hash, customFilter) {\n        this.filteredData = this.getData();\n        if (this.getData() && (filter || hash || customFilter)) {\n            this.filteredData = _.filter(this.getData(), customFilter || this.rowFilterFactory(filter, hash));\n        }\n    }\n\n    DataProvider.prototype.flash = function(row) {\n        row.flash = true;\n        $timeout(function() {\n            row.flash = false;\n        }, 1000)\n    }\n\n    DataProvider.prototype.updateData = function(newRows) {\n        var _this = this;\n        if (this.getData()) {\n            var id_list = _(newRows).flatten().map('id').value();\n            for (var i = 0; i < _this.getData().length && id_list.length; i++) {\n                var pos = id_list.indexOf(_this.getData()[i].id)\n                if (pos >= 0) {\n                    _this.getData()[i] = newRows[pos];\n                    id_list.splice(pos, 1);\n                }\n            };\n            if (id_list.length) {\n                var z = _.filter(newRows, function(e) {\n                    return _.includes(id_list, e.id);\n                })\n                _.each(z, function(x) {\n                    _this.getData().unshift(x)\n                })\n            }\n            $rootScope.$broadcast(_this.socketListChange());\n        }\n\n    }\n\n    DataProvider.prototype.getData = function() {\n        return this.data[this.model];\n    }\n\n\n    DataProvider.prototype.isInit = function() {\n        return this.model && this.data && this.data[this.model];\n    }\n    return DataProvider;\n\n});\n","angular.module('edison').factory('DateSelect', function() {\n    \"use strict\";\n    var DateSelect = function(dateStart, dateEnd) {\n\n        var _this = this;\n        var d = new Date();\n        _this.start = {\n            m: !dateStart ? 9 : dateStart.getMonth() + 1,\n            y: !dateStart ? 2013 : dateStart.getFullYear()\n        }\n        _this.current = {\n            m: d.getMonth() + 1,\n            y: d.getFullYear()\n        }\n\n        var frenchMonths = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n        _this._list = [];\n        _.times(_this.current.y - _this.start.y + 1, function(yr) {\n            _.times(12, function(mth) {\n                _this._list.push({\n                    m: mth + 1,\n                    y: _this.start.y + yr,\n                    t: frenchMonths[mth] + ' ' + (_this.start.y + yr),\n                    o: (_this.start.y + yr) + (mth + 1) * 0.01\n                })\n            })\n        })\n        _this._list.splice(_this.current.m - 12)\n    }\n    DateSelect.prototype.list = function() {\n        return this._list;\n    }\n    return DateSelect;\n});\n","angular.module('edison')\n    .factory('Devis', function(openPost, $window, $rootScope, $location, LxNotificationService, LxProgressService, dialog, edisonAPI, textTemplate) {\n        \"use strict\";\n        var Devis = function(data) {\n            if (!(this instanceof Devis)) {\n                return new Devis(data);\n            }\n            for (var k in data) {\n                this[k] = data[k];\n            }\n        }\n\n        var appelLocal = function(tel) {\n            console.log('---->', tel);\n            if (tel) {\n                $window.open('callto:' + tel, '_self', false);\n            }\n        }\n\n        Devis.prototype.callTel1 = function() {\n            appelLocal(this.client.telephone.tel1)\n        }\n        Devis.prototype.callTel2 = function() {\n            appelLocal(this.client.telephone.tel2)\n        }\n        Devis.prototype.callTel3 = function() {\n            appelLocal(this.client.telephone.tel3)\n        }\n\n        Devis.prototype.typeOf = function() {\n            return 'Devis';\n        }\n        Devis.prototype.save = function(cb) {\n            var _this = this;\n            console.log('yay')\n            edisonAPI.devis.save(_this)\n                .then(function(resp) {\n                    console.log('resp')\n                    var validationMessage = _.template(\"Les données du devis {{id}} ont à été enregistré\")(resp.data);\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n                }, function(error) {\n                    console.log('err')\n                    LxNotificationService.error(error.data);\n                    if (typeof cb === 'function')\n                        cb(\"une erreur est \" + error.data)\n                }).catch(function(e) {\n                    console.log('ERRRR:>', e)\n                })\n        };\n\n        Devis.prototype.devisPreview = function() {\n            if (!this.client.nom || !this.client.address.r || !this.client.address.v ||  !this.client.address.cp || !this.client.address.n) {\n                return LxNotificationService.error('Les coordonées du devis sont incompletes');\n            }\n            if (!this.produits || !this.produits.length) {\n                return LxNotificationService.error('Veuillez renseigner au moins 1 produits');\n            }\n            openPost('/api/intervention/devisPreview', {\n                data: JSON.stringify(this),\n                html: true\n            })\n        }\n\n        Devis.prototype.sendDevis = function(cb) {\n            var _this = this;\n            if (!/\\S+@\\S+\\.\\S+/.test(_this.client.email)) {\n                LxNotificationService.error(\"L'addresse email est invalide\");\n                return cb(\"err\");\n            }\n            var preview = Devis(this).devisPreview.bind(this)\n            dialog.getTextDevis(preview, {\n                text: textTemplate.mail.devis.envoi.bind(_this)($rootScope.user),\n                width: \"900px\",\n                height: \"700px\"\n            }, function(text) {\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.devis.envoi(_this.id, {\n                    text: text,\n                }).success(function(resp) {\n                    LxProgressService.circular.hide()\n                    var validationMessage = _.template(\"le devis {{id}} à été envoyé\")(_this);\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function') {\n                        console.log('yes cb')\n                        cb(null, resp);\n                    }\n                }, function(err) {\n                    LxProgressService.circular.hide()\n                    var validationMessage = _.template(\"L'envoi du devis {{id}} à échoué\\n\")(_this)\n                    if (err && err.data && typeof err.data === 'string')\n                        validationMessage += ('\\n(' + err.data + ')')\n                    LxNotificationService.error(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(err);\n                }).catch(function(err) {\n                    LxProgressService.circular.hide()\n                    var validationMessage = _.template(\"L'envoi du devis {{id}} à échoué\\n\")(_this)\n                    if (err && err.data && typeof err.data === 'string')\n                        validationMessage += ('\\n(' + err.data + ')')\n                    LxNotificationService.error(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n\n            })\n        }\n        Devis.prototype.annulation = function(cb) {\n            var _this = this;\n            edisonAPI.devis.annulation(_this.id)\n                .then(function(resp) {\n                    var validationMessage = _.template(\"Le devis {{id}} est annulé\")(resp.data)\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n                });\n        };\n\n        Devis.prototype.ouvrirFiche = function() {\n            $location.url(\"/devis/\" + this.id);\n        }\n        Devis.prototype.transfert = function() {\n            $location.url(\"/intervention?devis=\" + this.id);\n        }\n        return Devis;\n    });\n","angular.module('edison').factory('dialog', function(openPost, $mdDialog, edisonAPI, config, $window, LxNotificationService) {\n    \"use strict\";\n\n    return {\n\n        declareBug: function(tabs, cb) {\n            $mdDialog.show({\n                controller: function($scope, $mdDialog, config) {\n                    $scope.resp = {\n                        location: tabs.getCurrentTab().path,\n                    }\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            return cb(null, $scope.resp)\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/declare-bug.html',\n            });\n        },\n\n        verification: function(inter, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog, config) {\n                    $scope.data = inter\n                    $scope.config = config;\n                    $scope.answer = function(cancel) {\n                        $scope.window = $window;\n                        $scope.inter = inter;\n                        if (!cancel) {\n                            if (!$scope.inter.prixFinal) {\n                                LxNotificationService.error(\"Veuillez renseigner un prix final\");\n                            } else {\n                                $mdDialog.hide();\n                                cb(inter);\n                            }\n                        } else {\n                            $mdDialog.hide();\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/verification.html',\n            });\n        },\n        recouvrement: function(inter, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog, config) {\n                    $scope.data = inter\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            cb(inter);\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/recouvrement.html',\n            });\n        },\n        validationReglement: function(inter, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.data = inter\n                    $scope.answer = function(resp) {\n                        $scope.data = inter;\n                        $mdDialog.hide();\n                        if (resp === null) {\n                            return cb('nope')\n                        }\n                        if ($scope.data.compta.reglement.montant !== 0) {\n                            $scope.data.compta.reglement.recu = resp;\n                        }\n                        return cb(null, $scope.data);\n                    }\n                },\n                templateUrl: '/DialogTemplates/validationReglement.html',\n            });\n        },\n        validationPaiement: function(inter, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.data = inter\n                    $scope.preview = function() {\n                        openPost('/api/intervention/autofacture', {\n                            data: JSON.stringify($scope.data),\n                            html: true\n                        });\n                    }\n                    $scope.answer = function(resp) {\n                        $scope.data = inter;\n                        $mdDialog.hide();\n                        if (resp === null) {\n                            return cb('nope')\n                        }\n                        return cb(null, $scope.data);\n                    }\n                },\n                templateUrl: '/DialogTemplates/validationPaiement.html',\n            });\n        },\n        facturierDeviseur: function(artisan, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog, config) {\n                    $scope.sst = artisan\n                    $scope.deviseur = true;\n                    $scope.facturier = true;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            cb($scope.facturier, $scope.deviseur);\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/facturierDeviseur.html',\n            });\n        },\n        envoiFacture: function(inter, text, showAcquitte, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.text = text\n                    $scope.date = new Date();\n                    $scope.showAcquitte = showAcquitte;\n                    $scope.acquitte = showAcquitte;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            cb(null, $scope.text, $scope.acquitte, $scope.date);\n                        } else {\n                            cb('nope')\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/envoiFacture.html',\n            });\n        },\n        recap: function(inters) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog, config) {\n                    $scope.inters = inters;\n                    $scope.config = config\n                    $scope.answer = function() {\n                        $mdDialog.hide();\n                    }\n                },\n                templateUrl: '/DialogTemplates/recapList.html',\n            });\n        },\n        callsList: function(sst) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.sst = sst;\n                    $scope.answer = function() {\n                        $mdDialog.hide();\n                    }\n                },\n                templateUrl: '/DialogTemplates/callsList.html',\n            });\n        },\n        smsList: function(sst) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.sst = sst;\n                    $scope.answer = function() {\n                        $mdDialog.hide();\n                    }\n                },\n                templateUrl: '/DialogTemplates/smsList.html',\n            });\n        },\n        choiceText: function(options, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.options = options;\n                    $scope.answer = function(resp, text) {\n                        $mdDialog.hide();\n                        return cb(resp, text);\n                    }\n                },\n                templateUrl: '/DialogTemplates/choiceText.html',\n            });\n        },\n        addProd: function(cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog, $window) {\n                    $scope.pu = 0;\n                    $scope.window = $window\n                    $scope.quantite = 1;\n                    $scope.prod = {\n                        quantite: 1,\n                        pu: 0,\n                        title: \"\",\n                        ref: \"\"\n                    }\n                    $scope.$watch('prod', function() {\n                        $scope.prod.ref = $scope.prod.ref.toUpperCase();\n                        $scope.prod.title = $scope.prod.title.toUpperCase();\n                        $scope.prod.desc = $scope.prod.title;\n                        $scope.prod.pu = $scope.prod.pu;\n                        $scope.prod.quantite = $scope.prod.quantite;\n                    }, true)\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            return cb($scope.prod);\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/getProd.html',\n            });\n        },\n        getCauseAnnulation: function(inter, cb) {\n            $mdDialog.show({\n                controller: function($scope, config) {\n                    $scope.causeAnnulation = config.causeAnnulation;\n                    inter.datePlain = moment(inter.date.intervention).format('DD/MM/YYYY')\n                    $scope.textSms = _.template(\"L'intervention {{id}} chez {{client.civilite}} {{client.nom}} à {{client.address.v}} le {{datePlain}} a été annulé. \\nMerci de ne pas intervenir. \\nEdison Services\")(inter)\n                    $scope.answer = function(resp) {\n                        if (resp && !$scope.ca) {\n                            return LxNotificationService.error(\"Veuillez renseigner une raison d'annulation\");\n                        }\n                        $mdDialog.hide();\n                        if (resp)\n                            return cb(null, $scope.ca, $scope.reinit, $scope.sendSms, $scope.textSms);\n                        return cb('nope');\n                    }\n                },\n                templateUrl: '/DialogTemplates/causeAnnulation.html',\n            });\n        },\n        sendContrat: function(options, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.options = options;\n                    console.log(options.signe)\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel)\n                            return cb($scope.options);\n                    }\n                },\n                templateUrl: '/DialogTemplates/sendContrat.html',\n            });\n        },\n        getText: function(options, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.options = options;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel)\n                            return cb($scope.options.text);\n                    }\n                },\n                templateUrl: '/DialogTemplates/text.html',\n            });\n        },\n        getTextDevis: function(previewFunction, options, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.options = options;\n                    $scope.previewFunction = previewFunction;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (!cancel)\n                            return cb($scope.options.text);\n                    }\n                },\n                templateUrl: '/DialogTemplates/textDevis.html',\n            });\n        },\n        getFileAndText: function(data, text, files, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.Math = Math\n                    $scope.xfiles = _.clone(files ||  []);\n                    $scope.smsText = text;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (cancel === false) {\n                            return cb(null, $scope.smsText, $scope.addedFile);\n                        } else {\n                            return cb('nope');\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/fileAndText.html',\n            });\n        },\n        envoiIntervention: function(data, text, cb) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.data = data;\n                    $scope.smsText = text;\n                    $scope.answer = function(cancel) {\n                        $mdDialog.hide();\n                        if (cancel === false) {\n                            return cb(null, $scope.smsText, $scope.addedFile);\n                        } else {\n                            return cb('nope');\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/envoi.html',\n            });\n        },\n        editProduct: {\n            open: function(produit, cb) {\n                $mdDialog.show({\n                    controller: function DialogController($scope, $mdDialog) {\n                        $scope.produit = _.clone(produit);\n                        $scope.mdDialog = $mdDialog;\n                        $scope.answer = function(p) {\n                            $mdDialog.hide(p);\n                            return cb(p);\n                        }\n                    },\n                    templateUrl: '/DialogTemplates/edit.html',\n                });\n            }\n        },\n        selectSubProduct: function(elem, callback) {\n            $mdDialog.show({\n                controller: function DialogController($scope, $mdDialog) {\n                    $scope.elem = elem\n                    $scope.answer = function(cancel, item) {\n                        $mdDialog.hide();\n                        if (!cancel) {\n                            return callback(item)\n                        }\n                    }\n                },\n                templateUrl: '/DialogTemplates/selectSubProduct.html',\n            });\n        }\n    }\n\n});\n","angular.module('edison').factory('fourniture', [function() {\n    \"use strict\";\n\n    return {\n        init: function(fourniture) {\n            this.fourniture = fourniture;\n            if (!this.fourniture)\n                this.fourniture = [];\n            return this;\n        },\n        remove: function(index) {\n            this.fourniture.splice(index, 1);\n        },\n        moveTop: function(index) {\n            if (index !== 0) {\n                var tmp = this.fourniture[index - 1];\n                this.fourniture[index - 1] = this.fourniture[index];\n                this.fourniture[index] = tmp;\n            }\n\n        },\n        moveDown: function(index) {\n            if (index !== this.fourniture.length - 1) {\n                var tmp = this.fourniture[index + 1];\n                this.fourniture[index + 1] = this.fourniture[index];\n                this.fourniture[index] = tmp;\n            }\n        },\n        add: function() {\n            this.fourniture.push({\n                bl: '0',\n                title: 'Fourniture',\n                quantite: 1,\n                pu: 0\n            });\n        },\n        total: function() {\n            var total = 0;\n            if (this.fourniture) {\n                this.fourniture.forEach(function(e) {\n                    total += (e.pu * e.quantite);\n                })\n            }\n            return total\n        }\n    }\n\n}]);\n","angular.module('edison')\n    .factory('Intervention', function($location, $window, openPost, LxNotificationService, LxProgressService, dialog, user, config, edisonAPI, Devis, $rootScope, textTemplate) {\n        \"use strict\";\n\n        var Intervention = function(data) {\n            if (!(this instanceof Intervention)) {\n                return new Intervention(data);\n            }\n            for (var k in data) {\n                this[k] = data[k];\n            }\n        };\n\n        var appelLocal = function(tel) {\n            console.log('---->', tel);\n            if (tel) {\n                $window.open('callto:' + tel, '_self', false);\n            }\n        }\n\n        Intervention.prototype.callTel1 = function() {\n            appelLocal(this.client.telephone.tel1)\n        }\n        Intervention.prototype.callTel2 = function() {\n            appelLocal(this.client.telephone.tel2)\n        }\n        Intervention.prototype.callTel3 = function() {\n            appelLocal(this.client.telephone.tel3)\n        }\n\n        Intervention.prototype.callSst1 = function() {\n            appelLocal(this.sst.telephone.tel1)\n        }\n        Intervention.prototype.callSst2 = function() {\n            appelLocal(this.sst.telephone.tel2)\n        }\n\n        Intervention.prototype.callPayeur1 = function() {\n            appelLocal(this.facture.tel)\n        }\n\n        Intervention.prototype.callPayeur2 = function() {\n            appelLocal(this.facture.tel2)\n        }\n\n        Intervention.prototype.typeOf = function() {\n            return 'Intervention';\n        };\n        Intervention.prototype.envoiDevis = function(cb) {\n            Devis().envoi.bind(this)(cb)\n        };\n\n        Intervention.prototype.validerReglement = function(cb) {\n            var _this = this;\n            dialog.validationReglement(this, function(err, resp) {\n                if (err) {\n                    return cb && cb(err);\n                }\n                edisonAPI.intervention.save(_this).then(function(resp) {\n                    LxNotificationService.success(\"L'intervention \" + _this.id + \" est modifié\");\n                }, function(err) {\n                    LxNotificationService.error(\"Une erreur est survenu (\" + err.data + \")\");\n                });\n            })\n        };\n\n\n        Intervention.prototype.validerPaiement = function(cb) {\n            var _this = this;\n            dialog.validationPaiement(this, function(err, resp) {\n                if (err) {\n                    return cb && cb(err);\n                }\n                edisonAPI.intervention.save(_this).then(function(resp) {\n                    LxNotificationService.success(\"L'intervention \" + _this.id + \" est modifié\");\n                }, function(err) {\n                    LxNotificationService.error(\"Une erreur est survenu (\" + err.data + \")\");\n                });\n            })\n        };\n\n        Intervention.prototype.demarcher = function(cb) {\n            edisonAPI.intervention.demarcher(this.id).success(function() {\n                LxNotificationService.success(\"Vous demarchez l'intervention\");\n            }, function() {\n                LxNotificationService.error(\"Une erreur est survenu\");\n            })\n        };\n\n        Intervention.prototype.facturePreview = function() {\n            openPost('/api/intervention/facturePreview', {\n                data: JSON.stringify(this),\n                html: true\n            })\n        }\n\n        Intervention.prototype.factureAcquittePreview = function() {\n\n            openPost('/api/intervention/factureAcquittePreview', {\n                data: JSON.stringify(this),\n                html: true\n            })\n        }\n\n\n        Intervention.prototype.sendFactureAcquitte = function(cb) {\n            var _this = this;\n            var datePlain = moment(this.date.intervention).format('LL');\n            var template = textTemplate.mail.intervention.factureAcquitte.bind(_this)(datePlain)\n            var mailText = (_.template(template)(this))\n            dialog.envoiFacture(_this, mailText, true, function(err, text, acquitte, date) {\n                if (err)\n                    return cb('nope')\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.intervention.sendFactureAcquitte(_this.id, {\n                    text: text,\n                    acquitte: acquitte,\n                    date: date,\n                    data: _this\n                }).success(function(resp) {\n                    LxProgressService.circular.hide();\n                    var validationMessage = _.template(\"La facture de l'intervention {{id}} à été envoyé\")(_this)\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    LxProgressService.circular.hide();\n                    var validationMessage = _.template(\"L'envoi de la facture {{id}} à échoué\\n\" + \"(\" + err.data + \")\")(_this)\n                    LxNotificationService.error(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            })\n        }\n\n        Intervention.prototype.sendFacture = function(cb) {\n            var _this = this;\n            var datePlain = moment(this.date.intervention).format('LL');\n            var template = textTemplate.mail.intervention.envoiFacture.bind(_this)(datePlain)\n            var mailText = (_.template(template)(this))\n            dialog.envoiFacture(_this, mailText, false, function(err, text, acquitte, date) {\n                if (err)\n                    return cb('nope')\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.intervention.sendFacture(_this.id, {\n                    text: text,\n                }).success(function(resp) {\n                    LxProgressService.circular.hide();\n                    var validationMessage = _.template(\"La facture de l'intervention {{id}} à été envoyé\")(_this)\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    LxProgressService.circular.hide();\n                    var validationMessage = _.template(\"L'envoi de la facture {{id}} à échoué\\n\" + \"(\" + err.data + \")\")(_this)\n                    LxNotificationService.error(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            })\n        }\n\n\n\n        Intervention.prototype.ouvrirFicheV1 = function() {\n            $window.open('http://electricien13003.com/alvin/5_Gestion_des_interventions/show_res_bis_2.php?id_client=' + this.id)\n        }\n        Intervention.prototype.ouvrirFiche = function() {\n            $location.url('/intervention/' + this.id)\n        }\n        Intervention.prototype.ouvrirRecapSST = function() {\n            $location.url(['/artisan', this.artisan.id, 'recap'].join('/') + '#interventions')\n        }\n        Intervention.prototype.smsArtisan = function(cb) {\n\n            var _this = this;\n            var text = textTemplate.sms.intervention.demande.bind(this)(user, config);\n            text = _.template(text)(this)\n            dialog.getFileAndText(_this, text, [], function(err, text) {\n                if (err) {\n                    return cb(err)\n                }\n                edisonAPI.sms.send({\n                    dest: _this.sst.nomSociete,\n                    text: text,\n                    to: _this.sst.telephone.tel1,\n                }).success(function(resp) {\n                    var validationMessage = _.template(\"Un sms a été envoyé à M. {{sst.representant.nom}}\")(_this)\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    LxNotificationService.success(\"L'envoi du sms a échoué\");\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            })\n        };\n\n        Intervention.prototype.callClient = function(cb) {\n            var _this = this;\n            var now = Date.now();\n            $window.open('callto:' + _this.client.telephone.tel1, '_self', false)\n            dialog.choiceText({\n                subTitle: _this.client.telephone.tel1,\n                title: 'Nouvel Appel Client',\n            }, function(response, text) {\n                edisonAPI.call.save({\n                    date: now,\n                    to: _this.client.telephone.tel1,\n                    link: _this.id,\n                    origin: _this.id || _this.tmpID || 0,\n                    description: text,\n                    response: response\n                }).success(function(resp) {\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            })\n        }\n        Intervention.prototype.callArtisan = function(cb) {\n            var _this = this;\n            var now = Date.now();\n            $window.open('callto:' + _this.artisan.telephone.tel1, '_self', false)\n            dialog.choiceText({\n                subTitle: _this.artisan.telephone.tel1,\n                title: 'Nouvel Appel',\n            }, function(response, text) {\n                edisonAPI.call.save({\n                    date: now,\n                    to: _this.artisan.telephone.tel1,\n                    link: _this.artisan.id,\n                    origin: _this.id || _this.tmpID || 0,\n                    description: text,\n                    response: response\n                }).success(function(resp) {\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            })\n        };\n        Intervention.prototype.save = function(cb) {\n            var _this = this;\n\n            var fournitureSansFournisseur = _.find(this.fourniture, function(e) {\n                    return !e.fournisseur;\n                })\n                /*            if (_.get(this, 'client.telephone.tel1.length') !== 10) {\n                                LxNotificationService.error(\"Le telephone est invalide\");\n                                return cb(\"Bad Phone\")\n                            }*/\n\n            if (fournitureSansFournisseur) {\n                LxNotificationService.error(\"Veuillez renseigner un fournisseur\");\n                return cb(fournitureSansFournisseur)\n            }\n            edisonAPI.intervention.save(_this)\n                .then(function(resp) {\n                    var validationMessage = _.template(\"Les données de l'intervention {{id}} ont à été enregistré.\")(resp.data)\n                    if ((_this.tmpID && _this.sst) || (_this.sst__id && _this.sst && _this.sst__id !== _this.sst.id) && !_this.sst.tutelle) {\n                        validationMessage += \"\\n\\n Un sms à été envoyé\";\n                    }\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n                }, function(error) {\n                    LxNotificationService.error(error.data);\n                    if (typeof cb === 'function')\n                        cb(error.data)\n                });\n        };\n\n        Intervention.prototype.envoi = function(cb) {\n            var _this = this;\n            if (!Intervention(_this).isEnvoyable()) {\n                return LxNotificationService.error(\"Vous ne pouvez pas envoyer cette intervention\");\n            }\n            var defaultText = textTemplate.sms.intervention.envoi.bind(_this)(user);\n            dialog.envoiIntervention(_this, defaultText, function(err, text, file) {\n                if (err)\n                    return cb && cb(err)\n                LxProgressService.circular.show('#5fa2db', '#globalProgress');\n                edisonAPI.intervention.envoi(_this.id, {\n                    sms: text,\n                    file: file\n                }).then(function(resp) {\n                    LxProgressService.circular.hide();\n                    console.log('ok')\n                    var validationMessage = _.template(\"L'intervention est envoyé\")\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function')\n                        cb(null, resp.data)\n\n                }, function(error) {\n                    LxProgressService.circular.hide();\n                    console.log('error')\n                    LxNotificationService.error(error.data);\n                    if (typeof cb === 'function')\n                        cb(error.data);\n                });\n            })\n        };\n\n\n        Intervention.prototype.reactivation = function(cb) {\n            var _this = this;\n            edisonAPI.intervention.reactivation(this.id).then(function() {\n                LxNotificationService.success(\"L'intervention \" + _this.id + \" est à programmer\");\n            })\n        };\n\n        Intervention.prototype.annulation = function(cb) {\n            var _this = this;\n            dialog.getCauseAnnulation(_this, function(err, causeAnnulation, reinit, sms, textSms) {\n                if (err) {\n                    return typeof cb === 'function' && cb('err');\n                }\n                edisonAPI.intervention.annulation(_this.id, {\n                        causeAnnulation: causeAnnulation,\n                        reinit: reinit,\n                        sms: sms,\n                        textSms: textSms\n                    })\n                    .then(function(resp) {\n                        console.log('==>', !!sms, !!textSms)\n                        var msg = \"L'intervention {{id}} est annulé\";\n                        if (sms) {\n                            msg += \"\\nUn sms à été envoyé au SST\";\n                        }\n                        var validationMessage = _.template(msg)(resp.data)\n                        LxNotificationService.success(validationMessage);\n                        if (typeof cb === 'function') {\n                            cb(null, resp.data)\n                        }\n                    });\n            });\n        };\n\n\n        Intervention.prototype.envoiFactureVerif = function(cb) {\n            var _this = this;\n\n            if (!this.produits.length) {\n                LxNotificationService.error(\"Veuillez renseigner les produits\");\n                return cb('nope')\n            }\n            _this.sendFacture(function(err) {\n                if (err)\n                    return cb(err);\n                _this.verificationSimple(cb)\n            })\n        }\n\n        Intervention.prototype.verificationSimple = function(cb) {\n            var _this = this;\n            LxProgressService.circular.show('#5fa2db', '#globalProgress');\n            console.log('==>', Intervention(this).isVerifiable())\n            if (!Intervention(this).isVerifiable()) {\n                return LxNotificationService.error(\"Vous ne pouvez pas verifier cette intervention\");\n            }\n            edisonAPI.intervention.verification(_this.id)\n                .then(function(resp) {\n                    LxProgressService.circular.hide()\n                    var validationMessage = _.template(\"L'intervention {{id}} est vérifié\")(resp.data)\n                    LxNotificationService.success(validationMessage);\n                    if (typeof cb === 'function') {\n                        cb(null, resp.data);\n                    }\n                }, function(error) {\n                    LxProgressService.circular.hide()\n                    LxNotificationService.error(error.data);\n                    cb(error.data);\n                })\n        }\n\n        Intervention.prototype.verification = function(cb) {\n            if (!Intervention(this).isVerifiable()) {\n                return LxNotificationService.error(\"Vous ne pouvez pas verifier cette intervention\");\n            }\n            var _this = this;\n            if (!_this.reglementSurPlace) {\n                return $location.url('/intervention/' + this.id)\n            }\n            dialog.verification(_this, function(inter) {\n                Intervention(inter).save(function(err, resp) {\n                    if (!err) {\n                        return Intervention(resp).verificationSimple(cb);\n                    }\n                });\n            });\n        }\n\n\n        Intervention.prototype.recouvrement = function(cb) {\n            var _this = this;\n            dialog.recouvrement(_this, function(inter) {\n                Intervention(inter).save(function(err, resp) {\n                    return (cb || _.noop)()\n                });\n            });\n        }\n\n\n\n        Intervention.prototype.fileUpload = function(file, cb) {\n\n            var _this = this;\n\n            if (file) {\n                LxProgressService.circular.show('#5fa2db', '#fileUploadProgress');\n                edisonAPI.file.upload(file, {\n                    link: _this.id || _this.tmpID,\n                    model: 'intervention',\n                    type: 'fiche'\n                }).success(function(resp) {\n                    LxProgressService.circular.hide();\n                    if (typeof cb === 'function')\n                        cb(null, resp);\n                }).catch(function(err) {\n                    LxProgressService.circular.hide();\n                    if (typeof cb === 'function')\n                        cb(err);\n                })\n            }\n        }\n\n        Intervention.prototype.editCB = function() {\n            var _this = this;\n            edisonAPI.intervention.getCB(this.id).success(function(resp) {\n                _this.cb = resp;\n            }, function(error) {\n                LxNotificationService.error(error.data);\n            })\n        }\n\n        Intervention.prototype.reinitCB = function() {\n            this.cb = {\n                number: 0\n            }\n        }\n\n\n        Intervention.prototype.isEnvoyable = function() {\n            if (!this.sst) {\n                return false;\n            }\n            if (this.sst.subStatus === 'QUA' ||  this.sst.blocked) {\n                return false;\n            }\n            if (this.sst.subStatus === 'NEW' || this.sst.subStatus === 'TUT') {\n                return user.root || user.service === 'PARTENARIAT'\n            }\n            return _.includes([\"ANN\", \"APR\", \"ENC\", undefined], this.status)\n        }\n\n        Intervention.prototype.isPayable = function() {\n            return (this.status === 'ENC' || this.status === 'VRF') &&\n                user.root ||  user.service === 'COMPTABILITE'\n        }\n\n        Intervention.prototype.isVerifiable = function() {\n            console.log('isVerifiable')\n            if (!this.artisan) {\n                console.log('noartiasn')\n                return false;\n            }\n            if (this.sst.subStatus === 'QUA') {\n                console.log('QUA')\n                return false;\n            }\n            if (this.sst.subStatus === 'NEW' || this.sst.subStatus === 'TUT') {\n                console.log('NOROOT/PART=>', user.root, user.service, user.service === 'PARTENARIAT')\n                return user.root || user.service === 'PARTENARIAT'\n            }\n            return this.status === 'ENC'\n        }\n\n\n\n        return Intervention;\n    });\n"," angular.module('edison').directive('whenScrollEnds', function() {\n        return {\n            restrict: \"A\",\n            link: function(scope, element, attrs) {\n                var visibleHeight = element.height();\n                var threshold = 100;\n\n                element.scroll(function() {\n                    var scrollableHeight = element.prop('scrollHeight');\n                    var hiddenContentHeight = scrollableHeight - visibleHeight;\n\n                    if (hiddenContentHeight - element.scrollTop() <= threshold) {\n                        // Scroll is almost at the bottom. Loading more rows\n                        scope.$apply(attrs.whenScrollEnds);\n                    }\n                });\n            }\n        };\n    });","angular.module('edison').factory('Map', function() {\n    \"use strict\";\n\n    var Map = function() {\n        this.display = false;\n    }\n\n    Map.prototype.setCenter = function(address) {\n        var myLatLng = new google.maps.LatLng(address.lt, address.lg);\n        this.center = address;\n        if (window.map)\n            window.map.setCenter(myLatLng)\n    }\n\n    Map.prototype.setZoom = function(value) {\n       // throw new Error('lol')\n         if (window.map)\n            window.map.setZoom(value)\n        this.zoom = value\n    }\n    Map.prototype.show = function() {\n        this.display = true;\n    }\n    return Map;\n});\n","angular.module('edison').factory('mapAutocomplete', ['$q', 'Address',\n    function($q, Address) {\n        \"use strict\";\n        var autocomplete = function() {\n            this.service = new google.maps.places.AutocompleteService();\n            this.geocoder = new google.maps.Geocoder();\n        }\n\n        autocomplete.prototype.search = function(input) {\n            var deferred = $q.defer();\n            this.service.getPlacePredictions({\n                input: input,\n                componentRestrictions: {\n                    country: 'fr'\n                }\n            }, function(predictions) {\n                if (predictions)\n                    predictions.forEach(function(e) {\n                        if (e.description === input)\n                            predictions = null;\n                    })\n                deferred.resolve(predictions || []);\n            });\n            return deferred.promise;\n        }\n\n        autocomplete.prototype.getPlaceAddress = function(place) {\n            var self = this;\n            return $q(function(resolve, reject) {\n                self.geocoder.geocode({\n                    'address': place.description\n                }, function(result, status) {\n                    if (status !== google.maps.places.PlacesServiceStatus.OK)\n                        return reject(status);\n                    return resolve(Address(result[0]));\n                });\n\n            });\n        };\n\n        return new autocomplete();\n\n    }\n]);\n","angular.module('edison').factory('openPost', [function() {\n    \"use strict\";\n    return function(url, data) {\n        var mapForm = document.createElement(\"form\");\n        mapForm.target = \"_blank\";\n        mapForm.method = \"POST\";\n        mapForm.action = url;\n\n        // Create an input\n        _.each(data, function(e, i) {\n                var mapInput = document.createElement(\"input\");\n                mapInput.type = \"text\";\n                mapInput.name = i;\n                mapInput.value = typeof e == 'object' ? JSON.stringify(e) : e;\n                mapForm.appendChild(mapInput);\n            })\n            // Add the form to dom\n        document.body.appendChild(mapForm);\n\n        // Just submit\n        mapForm.submit();\n        mapForm.remove();\n    }\n}]);\n","angular.module('edison').factory('productsList', function($q, dialog, openPost, edisonAPI) {\n    \"use strict\";\n    var Produit = function(produits) {\n        this.produits = produits;\n        var _this = this\n        if (!this.ps) {\n            edisonAPI.product.list().then(function(resp) {\n                _this.ps = resp.data\n            })\n        }\n        _.each(this.produits, function(e) {\n            if (e.desc.toLowerCase() != e.title.toLowerCase()) {\n                e.showDesc = true\n            }\n        })\n        this.lastCall = _.now()\n    }\n    Produit.prototype = {\n        remove: function(index) {\n            this.produits.splice(index, 1);\n        },\n        moveTop: function(index) {\n            if (index !== 0) {\n                var tmp = this.produits[index - 1];\n                this.produits[index - 1] = this.produits[index];\n                this.produits[index] = tmp;\n            }\n\n        },\n        moveDown: function(index) {\n            if (index !== this.produits.length - 1) {\n                var tmp = this.produits[index + 1];\n                this.produits[index + 1] = this.produits[index];\n                this.produits[index] = tmp;\n            }\n        },\n        edit: function(index) {\n            var _this = this;\n            dialog.editProduct.open(this.produits[index], function(res) {\n                _this.produits[index] = res;\n            })\n        },\n        add: function(prod) {\n            if (this.lastCall + 100 > _.now())\n                return 0\n            this.lastCall = _.now()\n            this.searchText = '';\n            prod.quantite = 1;\n            this.produits.push(prod);\n        },\n        search: function(text) {\n            var rtn = []\n            for (var i = 0; i < this.ps.length; ++i) {\n                if (text === this.ps[i].title)\n                    return [];\n                var needle = _.deburr(text).toLowerCase()\n\n                var haystack = _.deburr(this.ps[i].title).toLowerCase();\n                var haystack2 = _.deburr(this.ps[i].ref).toLowerCase();\n                var haystack3 = _.deburr(this.ps[i].desc).toLowerCase();\n                if (_.includes(haystack, needle) ||\n                    _.includes(haystack2, needle) ||\n                    _.includes(haystack3, needle)) {\n                    var x = _.clone(this.ps[i])\n                    x.random = _.random();\n                    rtn.push(x)\n                }\n            }\n            return rtn\n        },\n        /*        search: function(text) {\n                    var deferred = $q.defer();\n                    edisonAPI.searchProduct(text)\n                        .success(function(resp) {\n                            deferred.resolve(resp)\n                        })\n                    return deferred.promise;\n                },*/\n        getDetail: function(elem) {\n            if (!elem)\n                return 0\n            var _this = this;\n            dialog.selectSubProduct(elem, function(resp) {\n                var rtn = {\n                    showDesc: true,\n                    quantite: 1,\n                    ref: resp.ref,\n                    title: elem.nom,\n                    desc: resp.nom + '\\n' + elem.description.split('-').join('\\n'),\n                    pu: Number(resp.prix)\n                }\n                _this.add(rtn)\n            })\n        },\n        flagship: function() {\n            return _.max(this.produits, 'pu');\n        },\n        total: function() {\n            var total = _.round(_.sum(this.produits, function(e)  {\n                return (e.pu || 0) * (e.quantite || 0);\n            }), 2)\n            return total;\n        },\n\n    }\n\n    return Produit;\n\n\n});\n","angular.module('edison').factory('socket', function(socketFactory) {\n    \"use strict\";\n    return socketFactory();\n});\n","angular.module('edison').factory('taskList', ['dialog', 'edisonAPI', function(dialog, edisonAPI) {\n    \"use strict\";\n    var Task = function(user) {\n        edisonAPI.get({\n            to: user,\n            done: false\n        })\n    }\n    Task.prototype = {\n        check: function(_id) {\n            edisonAPI.check({\n                _id: _id\n            })\n        },\n        add: function(params) {\n            edisonAPI.add(params)\n\n        }\n    }\n    return Task;\n\n\n}]);\n","angular.module('edison').factory('user', function($window) {\n    \"use strict\";\n    return $window.app_session;\n});\n"," angular.module('edison').directive('infoAppelSst', function(mapAutocomplete, edisonAPI, config) {\n    \"use strict\";\n    return {\n        restrict: 'E',\n        templateUrl: '/Templates/info-appel-sst.html',\n        scope: {\n            data: \"=\",\n        },\n        link: function(scope, element, attrs) {\n            scope.embedded = !!attrs.embedded\n            console.log(attrs.embedded);\n        },\n    }\n\n });\n"," angular.module('edison').directive('infoFacture', function(mapAutocomplete, edisonAPI,config) {\n     \"use strict\";\n     return {\n         restrict: 'E',\n         templateUrl: '/Templates/info-facture.html',\n         scope: {\n             data: \"=\",\n         },\n         link: function(scope, element, attrs) {\n             var model = scope.data;\n             scope.config = config;\n             scope.autocomplete = mapAutocomplete;\n             scope.changeAddressFacture = function(place) {\n                 mapAutocomplete.getPlaceAddress(place).then(function(addr) {\n                     scope.data.facture = scope.data.facture ||  {}\n                     scope.data.facture.address = addr;\n                 });\n             }\n             edisonAPI.compte.list().then(function(resp) {\n                 scope.grndComptes = resp.data\n             })\n\n             scope.changeGrandCompte = function() {\n                 // var x = _.clone(config.compteFacturation[scope.data.facture.compte])\n                 var x  = scope.data.facture.compte\n                 scope.data.facture = _.find(scope.grndComptes, 'ref', scope.data.facture.compte);\n                 scope.data.facture.payeur = \"GRN\";\n                 scope.data.facture.compte = x;\n             }\n         },\n     }\n\n });\n","angular.module('edison').directive('infoFourniture', ['config', 'fourniture',\n    function(config, fourniture) {\n        \"use strict\";\n        return {\n            restrict: 'E',\n            templateUrl: '/Templates/info-fourniture.html',\n            scope: {\n                data: \"=\",\n                display: \"=\",\n                small:\"=\"\n            },\n            link: function(scope, element, attrs) {\n                scope.config = config\n                scope.dsp = scope.display || false\n                scope.data.fourniture = scope.data.fourniture || [];\n                scope.fourniture = fourniture.init(scope.data.fourniture);\n            },\n        }\n\n    }\n]);\n","angular.module('edison').directive('mainNavbar', function($q, edisonAPI, TabContainer, $timeout, $rootScope, $location, $window) {\n    \"use strict\";\n    return {\n        restrict: 'E',\n        templateUrl: '/Templates/main-navbar.html',\n        scope: {\n            data: \"=\",\n            display: \"=\",\n            small: \"=\"\n        },\n        link: function(scope, element, attrs) {\n            scope.root = $rootScope;\n            scope._ = _;\n            scope.tabContainer = TabContainer;\n\n            scope.select = function(model) {\n                if (scope.selectedTab == model) {\n                    scope.selectedTab = null\n                } else {\n                    scope.selectedTab = model\n                }\n            }\n            $('input[type=\"search\"]').ready(function() {\n                $timeout(function() {\n                    $('input[type=\"search\"]').on('keyup', function(e, w) {\n                        if (e.which == 13) {\n                            if ($('ul.md-autocomplete-suggestions>li').length) {\n                                $location.url('/search/' + $(this).val())\n                                $(this).val(\"\")\n                                $(this).blur()\n                            }\n                        }\n                    });\n                }, 10);\n            })\n\n            $rootScope.$on('closeContextMenu', function() {\n                scope.selectedTab = null;\n            })\n\n\n\n\n            scope.logout = function() {\n                edisonAPI.users.logout().then(function() {\n                    $window.location.reload()\n                })\n            }\n\n\n            $rootScope.$on('closeSearchBar', function() {\n                scope.searchBarSize = 100\n            })\n\n            var searchInput = 'md-autocomplete.searchBar>md-autocomplete-wrap>input'\n            $(searchInput).ready(function() {\n                $timeout(function() {\n                    $(searchInput).on('focus', function() {\n                        scope.searchFocus = true\n                        var selectors = ['.navbar-header', '.navbar-nav', '.dropdown-toggle.user-menu']\n                        scope.searchBarSize = _.reduce(selectors, function(total, el) {\n                            return total -= $(el).width();\n                        }, $(window).width() - 70)\n                    })\n                    $(searchInput).on('blur', function() {\n                        scope.searchFocus = false\n                        scope.searchBarSize = 100\n                    })\n                }, 10);\n            })\n\n            scope.changeUser = function(usr) {\n                $rootScope.displayUser = usr\n            }\n\n            scope.searchBox = {\n                search: function(x) {\n                    var deferred = $q.defer();\n                    edisonAPI.searchText(x, {\n                        limit: 10,\n                        flat: true\n                    }).success(function(resp) {\n                        deferred.resolve(resp)\n                    })\n                    return deferred.promise;\n                },\n                change: function(x) {\n                    if (!x.link)\n                        return 0;\n                    if (x) {\n                        $location.url(x.link)\n                    }\n                    $timeout(function() {\n                        $(searchInput).blur();\n                    });\n                    scope.searchText = \"\";\n                }\n            }\n\n\n\n        },\n    }\n\n});\n","var archiveReglementController = function(edisonAPI, TabContainer, $routeParams, $location, LxProgressService) {\n\n    var tab = TabContainer.getCurrentTab();\n    var _this = this;\n    _this.title = 'Archives Reglements'\n    tab.setTitle('archives RGL')\n    LxProgressService.circular.show('#5fa2db', '#globalProgress');\n    edisonAPI.compta.archivesReglement().success(function(resp) {\n        LxProgressService.circular.hide()\n        _this.data = resp\n    })\n    _this.moment = moment;\n    _this.openLink = function(link) {\n        $location.url(link)\n    }\n}\n\nangular.module('edison').controller('archivesReglementController', archiveReglementController);\n\nvar archivesPaiementController = function(edisonAPI, TabContainer, $routeParams, $location, LxProgressService) {\n    var _this = this;\n    var tab = TabContainer.getCurrentTab();\n    _this.type = 'paiement'\n    _this.title = 'Archives Paiements'\n    tab.setTitle('archives PAY')\n    LxProgressService.circular.show('#5fa2db', '#globalProgress');\n    edisonAPI.compta.archivesPaiement().success(function(resp) {\n        LxProgressService.circular.hide()\n        _this.data = resp\n    })\n    _this.moment = moment;\n    _this.openLink = function(link) {\n        $location.url(link)\n    }\n}\n\nangular.module('edison').controller('archivesPaiementController', archivesPaiementController);\n"," angular.module('edison').directive('artisanCategorie', ['config', function(config) {\n     \"use strict\";\n     return {\n         replace: true,\n         restrict: 'E',\n         templateUrl: '/Templates/artisan-categorie.html',\n         transclude: true,\n         scope: {\n             model: \"=\",\n         },\n         link: function(scope, element, attrs) {\n             scope.config = config\n             scope.findColor = function(categorie) {\n                 var f = _.find(scope.model.categories, function(e)  {\n                     return e === categorie.short_name\n                 })\n                 return f ? categorie.color : \"white\";\n\n             }\n             scope.toggleCategorie = function(categorie) {\n                var f = scope.model.categories.indexOf(categorie);\n                if (f >= 0) {\n                    scope.model.categories.splice(f, 1);\n                } else {\n                    scope.model.categories.push(categorie)\n                }\n             }\n         },\n     }\n\n }]);\n","var ArtisanCtrl = function($timeout, $rootScope, $scope, edisonAPI, $location, $routeParams, ContextMenu, LxProgressService, LxNotificationService, TabContainer, config, dialog, artisanPrm, Artisan) {\n    \"use strict\";\n    var _this = this;\n    _this.config = config;\n    _this.dialog = dialog;\n    _this.moment = moment;\n    _this.contextMenu = new ContextMenu('artisan')\n    var tab = TabContainer.getCurrentTab();\n    if (!tab.data) {\n        var artisan = new Artisan(artisanPrm.data)\n        tab.setData(artisan);\n        if ($routeParams.id.length > 12) {\n            _this.isNew = true;\n            artisan.tmpID = $routeParams.id;\n            tab.setTitle('SST  ' + moment((new Date(parseInt(artisan.tmpID))).toISOString()).format(\"HH:mm\").toString());\n        } else {\n            tab.setTitle('SST  ' + $routeParams.id);\n            if (!artisan) {\n                LxNotificationService.error(\"Impossible de trouver les informations !\");\n                $location.url(\"/dashboard\");\n                TabContainer.remove(tab);\n                return 0;\n            }\n        }\n    } else {\n        var artisan = tab.data;\n    }\n    _this.data = tab.data;\n    _this.saveArtisan = function(options) {\n        artisan.save(function(err, resp) {\n            if (err) {\n                return false\n            } else if (options.contrat) {\n                artisan = new Artisan(resp);\n                artisan.envoiContrat.bind(resp)(options, function(err, res) {\n                    if (!err) {\n                        TabContainer.close(tab);\n                    }\n                });\n            } else {\n                TabContainer.close(tab);\n            }\n        })\n    }\n    _this.onArtisanFileUpload = function(file, name) {\n        LxProgressService.circular.show('#5fa2db', '#fileUploadProgress');\n        edisonAPI.artisan.upload(file, name, artisan.id).then(function() {\n            console.log('reload')\n            LxProgressService.circular.hide()\n            _this.loadFilesList();\n        })\n    }\n\n    _this.artisanClickTrigger = function(elem) {\n        setTimeout(function() {\n            angular.element(\"#file_\" + elem + \">input\").trigger('click');\n        }, 0)\n\n    }\n    _this.rightClick = function($event) {\n        console.log('rightClick')\n        _this.contextMenu.setPosition($event.pageX, $event.pageY)\n        _this.contextMenu.setData(artisan);\n        _this.contextMenu.open();\n    }\n\n    _this.fileExist = function(name) {\n        if (!artisan.file)\n            return false;\n        return _.find(artisan.file, function(e) {\n            return _.startsWith(e, name)\n        });\n    }\n\n    _this.loadFilesList = function() {\n        edisonAPI.artisan.getFiles(artisan.id).then(function(result) {\n            artisan.file = result.data;\n        }, console.log)\n    }\n    if (artisan.id) {\n        _this.loadFilesList();\n    }\n\n    _this.addComment = function() {\n\n        artisan.comments.push({\n            login: $rootScope.user.login,\n            text: _this.commentText,\n            date: new Date()\n        })\n        if (artisan.id) {\n            edisonAPI.artisan.comment(artisan.id, _this.commentText)\n        }\n        _this.commentText = \"\";\n    }\n    var updateTmpArtisan = _.after(5, _.throttle(function() {\n        edisonAPI.artisan.saveTmp(artisan);\n\n    }, 2000))\n\n    if (!artisan.id) {\n        $scope.$watch(function() {\n            return artisan;\n        }, updateTmpArtisan, true)\n    }\n}\nangular.module('edison').controller('ArtisanController', ArtisanCtrl);\n","var DashboardController = function($rootScope, statsTelepro, dialog, user, edisonAPI, $scope, $filter, TabContainer, NgTableParams, $routeParams, $location, LxProgressService) {\n    var _this = this;\n    $scope._ = _;\n    $scope.root = $rootScope;\n\n    _this.openLink = function(link) {\n        $location.url(link)\n    }\n\n\n    _this.addTask = function() {\n        edisonAPI.task.add(_this.newTask).then(_.partial(_this.reloadTask, _this.newTask.to));\n    }\n\n    _this.check = function(task) {\n        edisonAPI.task.check(task._id).then(_.partial(_this.reloadTask, _this.newTask.to))\n    }\n\n\n\n    _this.reloadTask = function(usr) {\n        _this.newTask = {\n            to: usr,\n            from: user.login\n        }\n        edisonAPI.task.listRelevant({\n            login: usr\n        }).then(function(resp) {\n            _this.taskList = resp.data;\n        })\n    }\n\n    _this.reloadTask(user.login);\n\n    _this.reloadDashboardStats = function(date) {\n\n        edisonAPI.intervention.dashboardStats(date).then(function(resp) {\n            _this.tableParams = new NgTableParams({\n                count: resp.data.weekStats.length,\n                sorting: {\n                    total: 'desc'\n                }\n            }, {\n                counts: [],\n                data: resp.data.weekStats\n            });\n            _this.stats = resp.data\n        })\n    }\n\n    _this.dateSelect = [{\n        nom: 'Du jour',\n        date: moment().startOf('day').toDate()\n    }, {\n        nom: 'De la semaine',\n        date: moment().startOf('week').toDate()\n    }, {\n        nom: 'Du mois',\n        date: moment().startOf('month').toDate()\n    }, {\n        nom: \"De l'année\",\n        date: moment().startOf('year').toDate()\n    }]\n    _this.dateChoice = _this.dateSelect[1];\n    this.reloadDashboardStats(_this.dateChoice);\n\n}\n\n\n\nangular.module('edison').controller('DashboardController', DashboardController);\n","var ContactArtisanController = function($scope, $timeout, TabContainer, LxProgressService, FiltersFactory, ContextMenu, edisonAPI, DataProvider, $routeParams, $location, $q, $rootScope, $filter, config, ngTableParams) {\n    \"use strict\";\n    var _this = this;\n\n    _this.loadPanel = function(id) {\n        edisonAPI.artisan.get(id)\n            .then(function(resp) {\n                _this.sst = resp.data;\n                console.log(TabContainer)\n                _this.tab.setTitle('@' + _this.sst.nomSociete.slice(0, 10));\n\n            })\n        edisonAPI.artisan.getStats(id).then(function(resp) {\n            new Chartist.Pie('.ct-chart', {\n                series: [{\n                    value: resp.data.envoye.total,\n                    name: 'En cours',\n                    className: 'ct-orange',\n                    meta: 'Meta One'\n                }, {\n                    value: resp.data.annule.total,\n                    name: 'annulé',\n                    className: 'ct-red',\n                    meta: 'Meta One'\n                }, {\n                    value: resp.data.paye.total,\n                    name: 'payé',\n                    className: 'ct-green',\n                    meta: 'Meta One'\n                }]\n            }, {\n                total: resp.data.annule.total + resp.data.paye.total + resp.data.envoye.total,\n                donut: true,\n                startAngle: 270,\n                donutWidth: 62,\n                /* donut: true,\n                 total: 100 +resp.data.annule.total + resp.data.paye.total + resp.data.envoye.total,\n                 showLabel: false*/\n            });\n            _this.stats = resp.data\n        })\n\n    }\n\n    _this.reloadStats = function() {\n        edisonAPI.artisan.statsMonths($routeParams.sstid).then(function(resp) {\n            var series = ['Annulé', 'Payé'];\n            var labels = []\n            var data = [\n                [],\n                []\n            ];\n            _.each(resp.data, function(e) {\n                labels.push(_.capitalize(moment([e.year, e.month - 1]).format('MMMM YYYY')))\n                data[0].push(e.annule);\n                data[1].push(e.paye);\n            })\n            _this.sstChart = {\n                series: series,\n                data: data,\n                labels: labels,\n                options: {\n                    scaleBeginAtZero: true,\n                },\n                colours: [\n                    '#F7464A', // red\n                    '#46BFBD', // green\n\n                ]\n            }\n        });\n    }\n\n\n    _this.tbz = ['informations', 'interventions', 'historique', 'stats', 'paiements'];\n    var ind = _this.tbz.indexOf($location.hash());\n    $scope.selectedIndex = ind >= 0 ? ind : 0\n    _this.tab = TabContainer.getCurrentTab();\n\n    _this.recap = $location.url().includes('recap') ? $routeParams.sstid : undefined\n\n    if (_this.recap) {\n        _this.loadPanel(_this.recap)\n    } else {\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        var dataProvider = new DataProvider('artisan');\n        dataProvider.init(function(err, resp) {\n            _this.config = config;\n            _this.moment = moment;\n            if (!dataProvider.isInit()) {\n                dataProvider.setData(resp);\n            }\n            _this.tableFilter = \"\";\n            _this.tableLimit = 20;\n            $rootScope.expendedRow = $routeParams.sstid || 45\n                // if (_this.recap) {\n                //     $scope.selectedIndex = 1;\n                // }\n            _this.tableData = dataProvider.getData()\n            _this.loadPanel(_this.tableData[0].id)\n            LxProgressService.circular.hide();\n        });\n    }\n\n    _this.getStaticMap = function(address) {\n        if (_this.sst && this.sst.address)\n            return \"/api/mapGetStatic?width=500&height=400&precision=0&zoom=6&origin=\" + _this.sst.address.lt + \", \" + _this.sst.address.lg;\n    }\n\n    _this.reloadData = function() {\n        _this.tableData = $filter('contactFilter')(dataProvider.getData(), _this.tableFilter);\n    }\n\n    _this.loadMore = function() {\n        _this.tableLimit += 10;\n    }\n\n    /*\n        $rootScope.$watch('tableilter', _this.reloadData);\n    */\n    $rootScope.$on('ARTISAN_CACHE_LIST_CHANGE', function() {\n        if (_this.tab.fullUrl === TabContainer.getCurrentTab().fullUrl) {\n            dataProvider.applyFilter(currentFilter, _this.tab.hash);\n        }\n    })\n\n    _this.contextMenu = new ContextMenu('artisan')\n\n    _this.rowRightClick = function($event, inter) {\n        console.log('contactclick')\n        _this.contextMenu.setPosition($event.pageX, $event.pageY + 200)\n        edisonAPI.artisan.get(inter.id)\n            .then(function(resp) {\n                _this.contextMenu.setData(resp.data);\n                _this.contextMenu.open();\n            })\n    }\n\n    $scope.addComment = function() {\n        edisonAPI.artisan.comment(_this.sst.id, $scope.commentText).then(function() {\n            _this.loadPanel(_this.sst.id);\n            $scope.commentText = \"\";\n        })\n    }\n\n    _this.rowClick = function($event, inter) {\n        if (_this.contextMenu.active)\n            return _this.contextMenu.close();\n        if ($event.metaKey || $event.ctrlKey) {\n            TabContainer.addTab('/artisan/' + inter.id, {\n                title: ('#' + inter.id),\n                setFocus: false,\n                allowDuplicates: false\n            });\n        } else {\n            if ($rootScope.expendedRow === inter.id) {\n                return 0;\n            } else {\n                $rootScope.expendedRow = inter.id\n                _this.loadPanel(inter.id)\n                $location.search('sstid', inter.id);\n            }\n        }\n    }\n\n\n    $scope.$watchCollection('[selectedIndex, expendedRow]', function(current, prev) {\n        if (current && current[0] !== void(0)) {\n            $location.hash(_this.tbz[current[0]]);\n        }\n        if (_this.tbz[current[0]] === 'stats') {\n            _this.reloadStats();\n        }\n    })\n\n\n}\nangular.module('edison').controller('ContactArtisanController', ContactArtisanController);\n","var LpaController = function(openPost, socket, ContextMenu, $location, $window, TabContainer, edisonAPI, $rootScope, LxProgressService, LxNotificationService, FlushList) {\n    \"use strict\";\n    var _this = this\n    var tab = TabContainer.getCurrentTab();\n    tab.setTitle('LPA')\n    _this.search = $location.search();\n    _this.contextMenu = new ContextMenu('intervention')\n\n    _this.loadData = function(prevChecked) {\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        edisonAPI.compta.lpa($location.search()).then(function(result) {\n            _.each(result.data, function(sst) {\n                sst.list = new FlushList(sst.list, prevChecked);\n                if (_this.search.d) {\n                    _this.checkArtisan(sst);\n                }\n                _this.reloadList(sst)\n            })\n            $rootScope.lpa = result.data\n            LxProgressService.circular.hide()\n        })\n    }\n\n\n    _this.rowRightClick = function($event, inter) {\n        edisonAPI.intervention.get(inter.id, {\n                populate: 'sst'\n            })\n            .then(function(resp) {\n                _this.contextMenu.setData(resp.data);\n                _this.contextMenu.setPosition($event.pageX, $event.pageY + 200)\n                _this.contextMenu.open();\n            })\n    }\n\n\n\n    if (!$rootScope.lpa)\n        _this.loadData()\n    _this.checkArtisan = function(sst) {\n\n        sst.checked = !sst.checked\n        _.each(sst.list.getList(), function(e) {\n            e.checked = sst.checked;\n        })\n    }\n    _this.updateNumeroCheque = function(index) {\n        var base = $rootScope.lpa[index].numeroCheque;\n        if (base) {\n            for (var i = index; i < $rootScope.lpa.length; i++) {\n                if ($rootScope.lpa[i].list.getList()[0].mode === 'CHQ' /*&& _.find($rootScope.lpa[i].list.getList(), 'checked', true)*/) {\n                    $rootScope.lpa[i].numeroCheque = base++\n                }\n            };\n        }\n    }\n    _this.flush = function() {\n        var rtn = [];\n\n        var lpa = [];\n        _.each(_.cloneDeep($rootScope.lpa), function(e) {\n            e.list.__list = _.filter(e.list.__list, 'checked', true);\n            if (e.list.__list.length) {\n                lpa.push(e);\n            }\n        })\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        edisonAPI.compta.flush(lpa).then(function(resp) {\n            edisonAPI.compta.flushMail(lpa).then(function(resp) {\n            });\n        })\n    }\n\n    socket.on('intervention_db_flushMail', function(data) {\n        if (data === 100) {\n            $rootScope.globalProgressCounter = \"\";\n            LxProgressService.circular.hide();\n            _this.reloadLPA()\n        } else {\n            $rootScope.globalProgressCounter = data + '%';\n        }\n\n    })\n\n    _this.selectToggle = function(artisan, item) {\n        if (this.search.d) {\n            return false;\n        }\n        item.checked = !item.checked;\n        _this.reloadList(artisan)\n    }\n    _this.reloadList = function(artisan) {\n\n        artisan.total = artisan.list.getTotal()\n        artisan.total = artisan.list.getTotal(true)\n        artisan.total = artisan.list.getTotal()\n    }\n    _this.reloadLPA = function() {\n        var rtn = [];\n        _.each($rootScope.lpa, function(sst) {\n            _.each(sst.list.getList(), function(e) {\n                if (e.checked) {\n                    rtn.push(e.id);\n                }\n            })\n        })\n        _this.loadData(rtn)\n    }\n\n    _this.clickTrigger = function(elem) {\n        window.setTimeout(function() {\n            angular.element(elem).trigger('click');\n        }, 0)\n    }\n\n    _this.onFileUpload = function(file) {\n        var ids = _($rootScope.lpa).map(_.partial(_.pick, _, 'numeroCheque', 'id')).value();\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        edisonAPI.file.uploadScans(file, {\n                ids: ids,\n                date: _this.search.d\n            }).then(function(resp) {\n                LxProgressService.circular.hide()\n            })\n    }\n\n    _this.print = function(type) {\n        openPost('/api/intervention/print', {\n            type: type,\n            data: $rootScope.lpa\n        });\n    }\n}\n\n\nangular.module('edison').controller('LpaController', LpaController);\n",""," angular.module('edison').directive('edisonMap', ['$window', 'Map', 'mapAutocomplete', 'Address',\n     function($window, Map, mapAutocomplete, Address) {\n         \"use strict\";\n         return {\n             replace: true,\n             restrict: 'E',\n             templateUrl: '/Templates/autocomplete-map.html',\n             scope: {\n                 data: \"=\",\n                 client: \"=\",\n                 height: \"@\",\n                 xmarkers: \"=\",\n                 markerClick: '&',\n                 isNew: \"=\",\n                 firstAddress: \"=\",\n                 showAddress: \"=\"\n             },\n             link: function(scope, element, attrs) {\n                 scope._height = scope.height || 315;\n                 scope.map = new Map();\n                 scope.map.setZoom(_.get(scope, 'client.address') ? 12 : 6)\n                 if (scope.isNew) {\n                     scope.map.show()\n                 }\n                 scope.autocomplete = mapAutocomplete;\n\n                 scope.mapShow = function() {\n                     scope.mapDisplay = true\n                 }\n\n                 if (_.get(scope, 'client.address.lt')) {\n                     scope.client.address = Address(scope.client.address, true); //true -> copyContructor\n                     scope.map.setCenter(scope.client.address);\n                 } else {\n                     scope.map.setCenter(Address({\n                         lat: 46.3333,\n                         lng: 2.6\n                     }));\n                     scope.map.setZoom(5)\n                 }\n\n                 scope.changeAddress = function(place) {\n                     scope.firstAddress = true;\n                     mapAutocomplete.getPlaceAddress(place).then(function(addr) {\n                         scope.map.setZoom(12);\n                         scope.map.setCenter(addr)\n                         scope.client.address = addr;\n                     });\n                 }\n\n                 scope.getStaticMap = function() {\n                     if (!_.get(scope, 'data.client.address.lt') && !_.get(scope, 'data.address.lt'))\n                         return 0\n                     var q = \"?width=\" + Math.round($window.outerWidth * (scope.height === \"small\" ? 0.8 : 1.2));\n                     if (scope.client && scope.client.address && scope.client.address.latLng)\n                         q += (\"&origin=\" + scope.client.address.latLng);\n                     if (scope.data.artisan && scope.data.artisan.address)\n                         q += (\"&destination=\" + scope.data.artisan.address.lt + \",\" + scope.data.artisan.address.lg);\n                     return \"/api/mapGetStatic\" + q;\n                 }\n                 scope.showClientMarker = function() {\n                     return scope.client.address && scope.client.address.latLng;\n                 }\n                 scope.clickOnArtisanMarker = function(event, sst) {\n                    scope.markerClick({\n                        sst:sst\n                    })\n                 }\n             }\n         }\n     }\n ]);\n"," angular.module('edison').directive('creditCard', ['config', function(config) {\n     \"use strict\";\n     return {\n         replace: true,\n         restrict: 'E',\n         templateUrl: '/Templates/credit-card.html',\n         scope: {\n             model: \"=\",\n         },\n         link: function(scope, element, attrs) {\n             scope.config = config\n         },\n     }\n\n }]);\n","var DevisCtrl = function(edisonAPI, $scope, $rootScope, $location, $routeParams, LxProgressService, LxNotificationService, TabContainer, config, dialog, devisPrm, Devis) {\n    \"use strict\";\n    var _this = this;\n    _this.config = config;\n    _this.dialog = dialog;\n    _this.moment = moment;\n    var tab = TabContainer.getCurrentTab();\n    if (!tab.data) {\n        var devis = new Devis(devisPrm.data)\n        tab.setData(devis);\n        if ($routeParams.id.length > 12) {\n            _this.isNew = true;\n            devis.tmpID = $routeParams.id;\n            tab.setTitle('DEVIS ' + moment((new Date(parseInt(devis.tmpID))).toISOString()).format(\"HH:mm\").toString());\n        } else {\n            tab.setTitle('DEVIS ' + $routeParams.id);\n            if (!devis) {\n                LxNotificationService.error(\"Impossible de trouver les informations !\");\n                $location.url(\"/dashboard\");\n                TabContainer.remove(tab);\n                return 0;\n            }\n        }\n    } else {\n        var devis = tab.data;\n    }\n    _this.data = tab.data;\n\n    var closeTab = function(err) {\n        if (!err)\n            TabContainer.close(tab);\n    }\n\n    _this.saveDevis = function(options) {\n        if (!devis.produits ||  !devis.produits.length) {\n            return LxNotificationService.error(\"Veuillez ajouter au moins 1 produit\");\n        }\n        devis.save(function(err, resp) {\n            if (err) {\n                return false;\n            } else if (options.envoi) {\n                Devis(resp).sendDevis(closeTab);\n            } else if (options.annulation) {\n                Devis(resp).annulation(closeTab);\n            } else if (options.transfert) {\n                Devis(resp).transfert()\n            } else {\n                closeTab();\n            }\n        })\n    }\n\n    $scope.$watch(function() {\n        return devis.client.civilite\n    }, function(newVal, oldVal) {\n        if (oldVal != newVal) {\n            devis.tva = (newVal == 'Soc.' ? 20 : 10);\n        }\n    })\n\n    var updateTmpDevis = _.after(5, _.throttle(function() {\n        edisonAPI.devis.saveTmp(devis);\n    }, 2000))\n\n    if (!devis.id) {\n        $scope.$watch(function() {\n            return devis;\n        }, updateTmpDevis, true)\n    }\n\n}\nangular.module('edison').controller('DevisController', DevisCtrl);\n"," angular.module('edison').directive('infoCategorie', ['config', function(config) {\n     \"use strict\";\n     return {\n         replace: true,\n         restrict: 'E',\n         templateUrl: '/Templates/info-categorie.html',\n         transclude: true,\n         scope: {\n             model: \"=\",\n             change: '&'\n         },\n         link: function(scope, element, attrs) {\n             scope.config = config\n             scope.callback = function(newCategorie) {\n                 scope.model = newCategorie;\n                 if (typeof scope.change === 'function')  {\n                     scope.change({\n                         newCategorie: newCategorie\n                     })\n                 }\n             }\n         },\n     }\n\n }]);\n"," angular.module('edison').directive('infoClient', ['config', 'edisonAPI', function(config, edisonAPI) {\n     \"use strict\";\n     return {\n         replace: true,\n         restrict: 'E',\n         templateUrl: '/Templates/info-client.html',\n         transclude: true,\n         scope: {\n             client: '=model',\n             data: '=',\n             noDetails:'@'\n         },\n         link: function(scope, element, attrs) {\n             scope.config = config;\n             scope.searchPhone = function(tel) {\n                 if (tel.length > 2) {\n                     edisonAPI.searchPhone(tel)\n                         .success(function(tel) {\n                             scope.searchedPhone = tel\n                         }).catch(function() {\n                             scope.searchedPhone = {};\n                         })\n                 }\n             }\n         }\n     }\n\n }]);\n","angular.module('edison').directive('infoCompta', ['config', 'Paiement',\n    function(config, Paiement) {\n        \"use strict\";\n        return {\n            restrict: 'E',\n            templateUrl: '/Templates/info-compta.html',\n            scope: {\n                data: \"=\",\n                displayReglement: '@',\n                dialog: '@',\n                displayPaiement: '@',\n                simulator:'@'\n            },\n            link: function(scope, element, attrs) {\n                scope.config = config\n                var reglement = scope.data.compta.reglement\n                var paiement = scope.data.compta.paiement\n                if (!scope.data.tva) {\n                    scope.data.tva = (scope.data.client.civilite == 'Soc.' ? 20 : 10)\n                }\n                if (!paiement.mode) {\n                    paiement.mode = _.get(scope.data.sst, 'document.rib.file') ? \"VIR\" : \"CHQ\"\n                }\n                scope.format = function(nbr) {\n                    return nbr;\n                    return _.round(nbr, 2).toFixed(2);\n                }\n                scope.compta = new Paiement(scope.data)\n                reglement.montantTTC = scope.compta.getMontantTTC()\n\n                scope.$watchGroup(['data.compta.reglement.montantTTC',\n                    'data.compta.reglement.avoir',\n                    'data.tva'\n                ], function(current, prev) {\n                    var montant = reglement.montantTTC || 0\n                    var coeff = 100 * (100 / (100 + scope.data.tva));\n                    reglement.montant = Paiement().applyCoeff(reglement.montantTTC, coeff)\n                    if (!paiement.base) {\n                        paiement.base = _.round(reglement.montant - (reglement.avoir ||  0), 2)\n                    }\n                })\n\n                var change = function(newValues, oldValues, scope) {\n                    if (!_.isEqual(newValues, oldValues)) {\n                        scope.compta = new Paiement(scope.data)\n                        paiement.montant = scope.compta.montantTotal\n                    }\n                }\n                scope.$watch('data.fourniture', change, true)\n                scope.$watchGroup(['data.compta.reglement.montant',\n                    'data.compta.paiement.base',\n                    'data.compta.paiement.tva',\n                    'data.compta.paiement.pourcentage.deplacement',\n                    'data.compta.paiement.pourcentage.fourniture',\n                    'data.compta.paiement.pourcentage.maindOeuvre',\n                ], change, true);\n                if (!scope.data.compta.paiement.base && scope.data.compta.reglement.montant) {\n                    scope.data.compta.paiement.base = scope.data.compta.reglement.montant;\n                    scope.compta = new Paiement(scope.data)\n                    paiement.montant = scope.compta.montantTotal\n                }\n            },\n\n        }\n\n    }\n]);\n"," angular.module('edison').directive('produits',\n     function(config, productsList, dialog, openPost, LxNotificationService, Intervention, Devis, Combo, edisonAPI) {\n         \"use strict\";\n         return {\n             restrict: 'E',\n             templateUrl: '/Templates/info-produit.html',\n             scope: {\n                 data: \"=\",\n                 tva: '=',\n                 display: '@',\n                 model: \"@\",\n                 embedded: \"=\"\n             },\n             link: function(scope, element, attrs) {\n                 var model = scope.data;\n                 scope.config = config\n                 model.produits = model.produits || [];\n                 scope.config = config;\n                 scope.produits = new productsList(model.produits);\n                 edisonAPI.combo.list().then(function(resp) {\n                     scope.combo = resp.data\n                 })\n\n                 scope.Intervention = Intervention;\n                 scope.Devis = Devis;\n\n                 if (!scope.data.reglementSurPlace) {\n                     scope.display = true;\n                 }\n\n\n                 scope.$watch('data.produits', function(curr, prev) {\n                     if (!_.isEqual(curr, prev)) {\n                         scope.data.prixFinal = scope.produits.total()\n                         scope.data.prixAnnonce = scope.produits.total()\n                     }\n                 }, true)\n\n                 scope.$watch('data.combo', function(curr, prev) {\n                     if (curr && !_.isEqual(curr, prev)) {\n                         var prod = _.find(scope.combo, function(e) {\n                             return e.ref === curr;\n                         })\n                         _.each(prod.produits, function(e) {\n                             if (!e.ref) {\n                                 e.ref = e.desc.toUpperCase().slice(0, 3) + '0' + _.random(9, 99)\n                             }\n                         })\n                         model.comboText = prod.text;\n                         model.produits = prod.produits || [];\n                         scope.produits = new productsList(model.produits);\n                     }\n                 }, true)\n\n                 scope.displayfact = function() {\n                     return scope.data.produits.length > 0 || !scope.data.reglementSurPlace || scope.dsf;\n                 }\n\n                 scope.changeElemTitle = function(elem) {\n                     if (!elem.showDesc) {\n                         elem.desc = elem.title\n                     }\n                 }\n\n                 scope.createProd = function() {\n                     /*                     scope.produits.add({\n                                              ref: 'EDIXX',\n                                              desc: \"\",\n                                              pu: 10,\n                                              quantite: 1,\n                                              focus: true,\n                                          })*/\n                     model.produits.push({\n                             showDesc: false,\n                             desc: '',\n                             title: '',\n                             pu: 0,\n                             quantite: 0,\n                         })\n                         /*  dialog.addProd(function(resp) {\n                               console.log(resp);\n                               model.produits.push(resp)\n                           });*/\n                 }\n                 scope.printDevis = function() {\n                     openPost('/api/intervention/printDevis', {\n                         data: JSON.stringify(scope.data),\n                         html: true\n                     })\n                 }\n\n                 scope.printFactureAcquitte = function() {\n                     openPost('/api/intervention/printFactureAcquitte', {\n                         data: JSON.stringify(scope.data),\n                         html: true\n                     })\n                 }\n             },\n         }\n\n     }\n );\n","var InterventionCtrl = function(Description, Signalement, ContextMenu, $window, $timeout, $rootScope, $scope, $location, $routeParams, dialog, fourniture, LxNotificationService, LxProgressService, TabContainer, edisonAPI, Address, $q, mapAutocomplete, productsList, config, interventionPrm, Intervention, Map) {\n    \"use strict\";\n    var _this = this;\n    _this.config = config;\n    _this.dialog = dialog;\n    _this.autocomplete = mapAutocomplete;\n    var tab = TabContainer.getCurrentTab();\n\n    if (!tab.data) {\n        var intervention = new Intervention(interventionPrm.data)\n\n        intervention.sst__id = intervention.sst ? intervention.sst.id : 0;\n        tab.setData(intervention);\n        if ($routeParams.id.length > 12) {\n            _this.isNew = true;\n            intervention.tmpID = $routeParams.id;\n            intervention.tmpDate = moment.unix(intervention.tmpID / 1000).format('HH[h]mm')\n            tab.setTitle(intervention.tmpDate);\n        } else {\n            if (intervention && intervention.client.nom) {\n                var __title = intervention.client.civilite + intervention.client.nom\n                __title = __title.slice(0, 10);\n            } else {\n                var __title = '#' + $routeParams.id;\n            }\n            tab.setTitle(__title);\n            if (!intervention) {\n                LxNotificationService.error(\"Impossible de trouver les informations !\");\n                $location.url(\"/dashboard\");\n                TabContainer.remove(tab);\n                return 0;\n            }\n        }\n    } else {\n        var intervention = tab.data;\n    }\n    if ($routeParams.d) {\n        intervention.devisOrigine = parseInt($routeParams.d)\n        intervention.date = {\n            ajout: new Date(),\n            intervention: new Date(),\n        }\n        intervention.reglementSurPlace = true;\n        intervention.modeReglement = 'CH';\n        intervention.remarque = 'PAS DE REMARQUES';\n    }\n    _this.data = tab.data;\n\n    $scope.bv = {\n        show: function(view) {\n            if (this[view]) {\n                return (this[view] = false);\n            }\n            this.historique = false;\n            this.absence = false;\n            this.signalement = false;\n            this[view] = true;\n        },\n        init: function() {\n            this.historique = this.absence = this.signalement = false;\n            _this.searchArtisans(intervention.categorie)\n            $timeout(function() {\n                _this.searchArtisans(intervention.categorie)\n            }, 666)\n        }\n    }\n\n    var updateTitle = _.throttle(function() {\n        tab.setTitle(_.template(\"{{typeof tmpDate == 'undefined' ? id : tmpDate}} - {{client.civilite}} {{client.nom}} ({{client.address.cp}})\")(intervention));\n    }, 1000)\n\n    $scope.$watch('vm.data.client', updateTitle, true)\n    updateTitle();\n    _this.description = new Description(intervention);\n    _this.signalement = new Signalement(intervention)\n    _this.contextMenuIntervention = new ContextMenu('intervention')\n    _this.contextMenuSST = new ContextMenu('artisan')\n    _this.contextMenu = _this.contextMenuIntervention\n    _this.contextMenu.setData(intervention);\n\n\n    _this.rowRightClick = function($event, inter) {\n        if ($('.map-box').has($event.target).length) {\n            var id = $event.target.getAttribute('id-sst') || _.get(intervention, 'sst.id')\n            if (id) {\n                _this.rightClickArtisan = id;\n                edisonAPI.artisan.get(id).then(function(resp) {\n                    _this.contextMenu = _this.contextMenuSST;\n                    _this.contextMenu.setData(resp.data);\n                    _this.contextMenu.setPosition($event.pageX, $event.pageY + 200)\n                    _this.contextMenu.open().onClose(_.debounce(function(resp) {\n                        _this.searchArtisans(intervention.categorie)\n                    }, 500))\n                })\n            }\n\n        } else if ($('.listeInterventions').has($event.target).length == 0) {\n            _this.contextMenu = this.contextMenuIntervention;\n            _this.contextMenu.setPosition($event.pageX, $event.pageY + 200)\n            _this.contextMenu.open();\n        }\n    }\n\n    Mousetrap.bind(['command+k', 'ctrl+k', 'command+f1', 'ctrl+f1'], function() {\n        $window.open(\"appurl:\", '_self');\n        edisonAPI.intervention.scan(intervention.id).then(function() {\n            $scope.loadFilesList();\n            LxNotificationService.success(\"Le fichier est enregistré\");\n        })\n        return false;\n    });\n\n\n    $scope.calculPrixFinal = function() {\n        if (intervention.reglementSurPlace) {\n            return 0;\n        }\n        intervention.prixFinal = 0;\n        _.each(intervention.produits, function(e)  {\n            intervention.prixFinal += (e.pu * e.quantite)\n        })\n        intervention.prixFinal = Math.round(intervention.prixFinal * 100) / 100;\n    }\n\n\n\n    $scope.addLitige = function() {\n        dialog.getText({\n            title: \"Description du Litige\",\n            text: \"\"\n        }, function(resp) {\n            if (!intervention.litiges)\n                intervention.litiges = [];\n            intervention.litiges.push({\n                date: new Date(),\n                login: $rootScope.user.login,\n                description: resp,\n                regle: false\n            })\n        })\n    }\n\n    $scope.smsArtisan = function() {\n        intervention.smsArtisan(function(err, resp) {\n            if (!err)\n                intervention.sst.sms.unshift(resp)\n        })\n    }\n\n\n    $scope.clickTrigger = function(elem) {\n        angular.element(elem).trigger('click');\n    }\n\n\n    $scope.$watch('fileupload', function(file) {\n        if (file && file.length === 1) {\n            intervention.fileUpload(file[0], function(err, resp) {\n                $scope.fileUploadText = \"\";\n                $scope.loadFilesList();\n            });\n        }\n    })\n\n    $scope.loadFilesList = function() {\n        edisonAPI.intervention.getFiles(intervention.id || intervention.tmpID).then(function(result) {\n            intervention.files = result.data;\n        }, console.log)\n    }\n\n    $scope.loadFilesList();\n\n    var postSave = function(options, resp, cb) {\n        if (options && options.envoiFacture && options.verification) {\n            intervention.envoiFactureVerif(cb)\n        } else if (options && options.envoiFacture) {\n            intervention.sendFacture(cb)\n        } else if (options && options.envoi === true) {\n            resp.files = intervention.files;\n            intervention.envoi.bind(resp)(cb);\n        } else if (options && options.annulation) {\n            intervention.annulation(cb);\n        } else if (options && options.verification) {\n            intervention.verificationSimple(cb);\n        } else {\n            cb(null)\n        }\n    }\n\n    var saveInter = function(options) {\n        $scope.saveInter = function() {\n            console.log('noope')\n        }\n        intervention.save(function(err, resp) {\n            if (!err) {\n              /*  var files = intervention.files\n                var tmp = intervention;\n                intervention = new Intervention(resp);\n                intervention.produits = tmp.produits;\n                intervention.fourniture = tmp.fourniture;\n                intervention.files = files*/\n                postSave(options, resp, function(err) {\n                    if (!err) {\n                        TabContainer.close(tab);\n                    }\n                    $scope.saveInter = saveInter;\n                })\n            } else {\n                $scope.saveInter = saveInter;\n            }\n        })\n    }\n\n    $scope.saveInter = saveInter;\n\n\n    var latLng = function(add) {\n        return add.lt + ', ' + add.lg\n    }\n    _this.selectArtisan = function(sst, first) {\n\n        if (!sst) {\n            intervention.sst = intervention.artisan = null\n            return false;\n        }\n        $q.all([\n            edisonAPI.artisan.get(sst.id, {\n                cache: false\n            }),\n            edisonAPI.artisan.getStats(sst.id, {\n                cache: true\n            })\n        ]).then(function(result) {\n            intervention.sst = intervention.artisan = result[0].data;\n            intervention.sst.stats = result[1].data\n            if (!first) {\n                intervention.compta.paiement.pourcentage = _.clone(intervention.sst.pourcentage);\n                intervention.newOs = intervention.sst.newOs;\n            }\n            edisonAPI.getDistance(latLng(sst.address), latLng(intervention.client.address))\n                .then(function(dir) {\n                    intervention.sst.stats.direction = dir.data;\n                })\n            _this.recapFltr = {\n                ai: intervention.sst.id\n            }\n        });\n    }\n\n    _this.showInterList = function() {\n        //console.log('uauau')\n        //$scope.interList = true;\n    }\n\n    _this.sstBase = intervention.sst;\n    if (intervention.sst) {\n        _this.selectArtisan(intervention.sst, true);\n    }\n\n    _this.searchArtisans = function(categorie) {\n        if (_.get(intervention, 'client.address.lt')) {\n            edisonAPI.artisan.getNearest(intervention.client.address, categorie || intervention.categorie)\n                .success(function(result) {\n                    _this.nearestArtisans = result;\n                });\n        }\n    }\n    _this.searchArtisans();\n\n    $scope.$watch(function() {\n        return intervention.client.address;\n    }, function() {\n        _this.searchArtisans(intervention.categorie);\n    })\n\n\n    $scope.$watch(function() {\n        return intervention.client.civilite;\n    }, function(curr, prev) {\n        if (curr !== prev && curr === 'Soc.') {\n            intervention.tva = 20;\n            LxNotificationService.info(\"La TVA à été mise a 20%\");\n        }\n    })\n\n    var updateTmpIntervention = _.after(5, _.throttle(function() {\n        edisonAPI.intervention.saveTmp(intervention);\n    }, 2000))\n\n    if (!intervention.id) {\n        $scope.$watch(function() {\n            return intervention;\n        }, updateTmpIntervention, true)\n    }\n\n}\n\nangular.module('edison').controller('InterventionController', InterventionCtrl);\n","angular.module('edison').controller('ListeArtisanController', _.noop);\n","angular.module('edison').controller('ListeDevisController', _.noop);\n","angular.module('edison').controller('ListeInterventionController', _.noop);\n","var SearchController = function(edisonAPI, TabContainer, $routeParams, $location, LxProgressService) {\n    var tab = TabContainer.getCurrentTab();\n    tab.setTitle('Search')\n    var _this = this;\n    LxProgressService.circular.show('#5fa2db', '#globalProgress');\n    edisonAPI.searchText($routeParams.query).success(function(resp) {\n        LxProgressService.circular.hide()\n        _this.data = resp\n    })\n    _this.openLink = function(link) {\n        $location.url(link)\n    }\n}\n\nangular.module('edison').controller('SearchController', SearchController);\n","var listeSignalements = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Liste Signalements');\n    var q = $location.search();\n    edisonAPI.signalement.list($location.search()).then(function(resp) {\n        $scope.pl = resp.data;\n        console.log('-->', resp.data)\n    })\n\n}\nangular.module('edison').controller('listeSignalements', listeSignalements);\n","var StatsNewController = function(DateSelect, TabContainer, $routeParams, edisonAPI, $rootScope, $scope, $location, LxProgressService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Stats');\n\n\n    var dateSelect = new DateSelect;\n    _this.yearSelect = [];\n    _.times(dateSelect.current.y - dateSelect.start.y + 1, function(k) {\n        _this.yearSelect.push(dateSelect.start.y + k);\n    })\n    $scope.selectedYear = dateSelect.current.y\n\n    var getChart = function(type, title, series, categories) {\n\n\n        return {\n            chart: {\n                zoomType: 'x',\n                type: type\n            },\n            title: {\n                text: title\n            },\n            xAxis: {\n                categories: categories\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: 'Chiffre'\n                },\n            },\n            tooltip: {\n                shared: true,\n                valueSuffix: ' €'\n            },\n            plotOptions: {\n                animation: false,\n                column: {\n                    pointPadding: 0,\n                    groupPadding: 0.04,\n                    borderWidth: 0,\n                    animation: false,\n                    //  stacking: 'normal',\n                },\n                area: {\n                    stacking: 'normal',\n                    lineColor: '#666666',\n                    lineWidth: 1,\n                    marker: {\n                        lineWidth: 1,\n                        lineColor: '#666666'\n                    }\n                },\n                areaspline: {\n                    stacking: 'normal',\n                }\n            },\n            series: series\n        }\n    }\n\n\n    _this.typeSelect = [\n        'column',\n        'areaspline',\n        'area',\n        'line',\n        'pie',\n        'bar',\n        'spline',\n    ]\n    $scope.selectedType = 'column'\n\n    _this.dividerSelect = [\n        'categorie',\n        'chiffre',\n        'telepro'\n    ]\n    $scope.selectedDivider = 'chiffre'\n\n    var monthChange = function() {\n        edisonAPI.intervention.statsBen({\n            month: $scope.selectedDate.m,\n            year: $scope.selectedDate.y,\n            group: 'day',\n            model: 'ca',\n            divider: $scope.selectedDivider,\n        }).then(function(resp) {\n            console.log(resp.data);\n            var d = resp.data;\n            $('#chartContainer').highcharts(getChart($scope.selectedType, d.title, d.series, d.categories));\n        });\n    }\n\n    var yearChange = function() {\n        edisonAPI.intervention.statsBen({\n            year: $scope.selectedDate.y,\n            group: 'month',\n            model: 'ca',\n            divider: $scope.selectedDivider,\n        }).then(function(resp) {\n            var d = resp.data;\n            $('#chartContainer2').highcharts(getChart($scope.selectedType, d.title, d.series, d.categories));\n        });\n    }\n\n    var weekChange = function() {\n        edisonAPI.intervention.statsBen({\n            year: $scope.selectedDate.y,\n            group: 'week',\n            model: 'ca',\n            divider: $scope.selectedDivider,\n        }).then(function(resp) {\n            var d = resp.data;\n            $('#chartContainer3').highcharts(getChart($scope.selectedType, d.title, d.series, d.categories));\n        });\n    }\n\n\n    $scope.$watch(\"selectedType\", function()  {\n        monthChange();\n        yearChange();\n        weekChange();\n    });\n\n\n    $scope.$watch(\"selectedDivider\", function()  {\n        monthChange();\n        yearChange();\n        weekChange();\n    });\n\n    $scope.$watch(\"selectedYear\", function() {\n        yearChange();\n        weekChange();\n\n    });\n    $scope.$watch(\"selectedDate\", function(curr) {\n        if (!curr ||  !curr.m || !curr.y)\n            return false;\n        $location.search('m', curr.m);\n        $location.search('y', curr.y);\n        return monthChange(curr);\n    });\n\n    if ($location.search().m)  {\n        dateSelect.current.m = parseInt($location.search().m)\n    }\n    if ($location.search().y)  {\n        dateSelect.current.y = parseInt($location.search().y)\n    }\n    _this.dateSelect = dateSelect.list()\n    $scope.selectedDate = _.find(dateSelect.list(), dateSelect.current)\n}\nangular.module('edison').controller('StatsNewController', StatsNewController);\n","var StatsController = function(DateSelect, TabContainer, $routeParams, edisonAPI, $rootScope, $scope, $location, LxProgressService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Stats');\n\n\n    var dateSelect = new DateSelect;\n    _this.yearSelect = [];\n    _.times(dateSelect.current.y - dateSelect.start.y + 1, function(k) {\n        _this.yearSelect.push(dateSelect.start.y + k);\n    })\n    $scope.selectedYear = dateSelect.current.y\n\n    $scope.$watch(\"selectedYear\", function(curr) {\n        edisonAPI.intervention.statsBen({\n            y: curr\n        }).then(function(resp) {\n            console.log(resp.data)\n            $('#chartContainer2 > *').remove()\n            var svg = dimple.newSvg(\"#chartContainer2\", 1070, 400);\n            var myChart = new dimple.chart(svg, resp.data);\n            myChart.setBounds(60, 30, 1000, 300)\n            var x = myChart.addCategoryAxis(\"x\", \"mth\");\n            var y = myChart.addMeasureAxis(\"y\", \"montant\");\n            y.tickFormat = ',.0f';\n            myChart.addSeries(\"potentiel\", dimple.plot.bar);\n            myChart.addLegend(60, 10, 410, 20, \"right\");\n            myChart.draw();\n\n            $scope.totalYear = {\n                potentiel: 0,\n                recu: 0\n            }\n\n            _.each(resp.data, function(e) {\n                $scope.totalYear[e.potentiel ? 'potentiel' : 'recu'] += e.montant\n            })\n        })\n    });\n\n\n\n\n    $scope.$watch(\"selectedDate\", function(curr) {\n        if (!curr ||  !curr.m || !curr.y)\n            return false;\n        $location.search('m', curr.m);\n        $location.search('y', curr.y);\n        edisonAPI.intervention.statsBen(curr).then(function(resp) {\n            $('#chartContainer > *').remove()\n            var svg = dimple.newSvg(\"#chartContainer\", 1300, 400);\n            var myChart = new dimple.chart(svg, resp.data);\n            myChart.setBounds(60, 30, 1000, 300)\n            var x = myChart.addCategoryAxis(\"x\", \"day\");\n            //x.addOrderRule(\"dt\");\n            var y = myChart.addMeasureAxis(\"y\", \"prix\");\n            y.tickFormat = ',.0f';\n            myChart.addSeries(\"recu\", dimple.plot.bar);\n            //myChart.addPctAxis(\"y\", \"paye\");\n            myChart.assignColor(\"En Attente\", \"#2196F3\");\n            myChart.assignColor(\"Encaissé\", \"#4CAF50\");\n            myChart.addLegend(60, 10, 410, 20, \"right\");\n            myChart.draw();\n\n        })\n    })\n    if ($location.search().m)  {\n        dateSelect.current.m = parseInt($location.search().m)\n    }\n    if ($location.search().y)  {\n        dateSelect.current.y = parseInt($location.search().y)\n    }\n    _this.dateSelect = dateSelect.list()\n    $scope.selectedDate = _.find(dateSelect.list(), dateSelect.current)\n}\nangular.module('edison').controller('StatsController', StatsController);\n","var AvoirsController = function(TabContainer, openPost, edisonAPI, $rootScope, LxProgressService, LxNotificationService, FlushList) {\n    \"use strict\";\n    var _this = this\n    var tab = TabContainer.getCurrentTab();\n    tab.setTitle('Avoirs')\n    _this.loadData = function(prevChecked) {\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        edisonAPI.compta.avoirs().then(function(result) {\n            console.log(result)\n            $rootScope.avoirs = result.data\n            LxProgressService.circular.hide()\n        })\n    }\n    if (!$rootScope.avoirs)\n        _this.loadData()\n\n    _this.reloadAvoir = function() {\n        _this.loadData()\n    }\n\n    _this.print = function(type) {\n        console.log($rootScope.avoirs);\n        openPost('/api/intervention/printAvoir', {\n            data: $rootScope.avoirs\n        });\n    }\n\n    _this.flush = function() {\n        var list = _.filter($rootScope.avoirs, {\n            checked: true\n        })\n        edisonAPI.compta.flushAvoirs(list).then(function(resp) {\n            LxNotificationService.success(resp.data);\n            _this.reloadAvoir()\n        }).catch(function(err) {\n            LxNotificationService.error(err.data);\n        })\n    }\n\n}\n\n\nangular.module('edison').controller('avoirsController', AvoirsController);\n","var CommissionsController = function(DateSelect, TabContainer, $routeParams, edisonAPI, $rootScope, $scope, $location, LxProgressService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Coms.');\n\n    _this.xcalc = function(e) {\n        return e.categorie === 'VT' ? 1.5 : _.round(e.compta.reglement.montant * 0.01, 2);\n    }\n\n    _this.getTotal = function() {\n        var rtn = {\n            com: 0,\n            all: 0\n        }\n        _.each($scope.list, function(x) {\n            rtn.com += _this.xcalc(x);\n            rtn.all += x.compta.reglement.montant || 0\n        })\n        return rtn;\n    }\n\n    var dateSelect = new DateSelect;\n\n    $scope.usrs = _.filter(window.app_users, 'service', 'INTERVENTION');\n\n    $scope.selectedUser = $location.search().l ||  $scope.usrs[0].login\n\n    var actualise = _.debounce(function() {\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n\n        edisonAPI.intervention.commissions(_.merge($scope.selectedDate, {\n            l: $scope.selectedUser\n        })).then(function(resp) {\n            LxProgressService.circular.hide();\n            $scope.list = resp.data\n            $scope.total = _this.getTotal()\n        })\n    }, 50)\n    $scope.$watch(\"selectedUser\", function(curr, prev) {\n        $location.search('l', curr);\n        actualise();\n        /* */\n    })\n    $scope.$watch(\"selectedDate\", function(curr, prev) {\n        $location.search('m', curr.m);\n        $location.search('y', curr.y);\n        actualise();\n        /* $location.search('m', curr.m);\n         $location.search('y', curr.y);\n         edisonAPI.intervention.commissions(curr).then(function(resp) {\n             console.log('==>', resp.data)\n         })*/\n    })\n    if ($location.search().m)  {\n        dateSelect.current.m = parseInt($location.search().m)\n    }\n    if ($location.search().y)  {\n        dateSelect.current.y = parseInt($location.search().y)\n    }\n    _this.dateSelect = dateSelect.list()\n    $scope.selectedDate = _.find(dateSelect.list(), dateSelect.current)\n}\nangular.module('edison').controller('CommissionsController', CommissionsController);\n","var editCombos = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Combos');\n\n\n    var base = {\n        \"id\": 29300,\n        \"categorie\": \"EL\",\n        \"description\": \"RECHERCHE DE PANNE ELCTRIQUE\",\n        \"sst\": 31,\n        \"file\": [],\n        \"tva\": 10,\n        \"coutFourniture\": 0,\n        \"enDemarchage\": false,\n        \"aDemarcher\": false,\n        \"reglementSurPlace\": false,\n        \"prixFinal\": 0,\n        \"prixAnnonce\": 130,\n        \"modeReglement\": \"CH\",\n        \"fourniture\": [],\n        \"produits\": [],\n        \"remarque\": \"Pas de remarque(s)\",\n        \"descriptionTags\": [],\n        \"artisan\": {\n            \"id\": 31,\n            \"nomSociete\": \"SODESEN\"\n        },\n        \"savEnCours\": true,\n        \"litigesEnCours\": true,\n        \"litiges\": [],\n        \"sav\": [],\n        \"client\": {\n            \"civilite\": \"M.\",\n            \"nom\": \"DELORME\",\n            \"email\": \"\",\n            \"location\": [\n                45.7592,\n                4.77779\n            ],\n            \"address\": {\n                \"n\": \"19\",\n                \"r\": \"RUE DES CERISIERS\",\n                \"v\": \"TASSIN-LA-DEMI-LUNE\",\n                \"cp\": \"69160\",\n                \"lt\": 45.7592,\n                \"lg\": 4.77779\n            },\n            \"telephone\": {\n                \"tel1\": \"0478346059\",\n                \"origine\": \"0478346059\"\n            },\n            \"prenom\": \"CHRISTIAN\"\n        },\n        \"facture\": {\n            \"civilite\": \"M.\",\n            \"nom\": \"DELORME\",\n            \"email\": \"\",\n            \"location\": [\n                45.7592,\n                4.77779\n            ],\n            \"address\": {\n                \"n\": \"19\",\n                \"r\": \"RUE DES CERISIERS\",\n                \"v\": \"TASSIN-LA-DEMI-LUNE\",\n                \"cp\": \"69160\",\n                \"lt\": 45.7592,\n                \"lg\": 4.77779\n            },\n            \"telephone\": {\n                \"tel1\": \"0478346059\",\n                \"origine\": \"0478346059\"\n            },\n            \"prenom\": \"CHRISTIAN\"\n        },\n        \"produits\": [],\n        \"historique\": [],\n        \"comments\": [],\n        \"date\": {\n            \"intervention\": \"2015-09-17T11:00:00.000Z\",\n            \"envoi\": \"2015-09-17T09:11:14.000Z\",\n            \"ajout\": \"2015-09-17T09:11:14.000Z\"\n        },\n        \"login\": {\n            \"ajout\": \"clement_b\",\n            \"envoi\": \"clement_b\"\n        },\n        \"status\": \"ENC\"\n    }\n\n\n\n    edisonAPI.combo.list().then(function(resp) {\n        $scope.plSave = resp.data\n        $scope.pl = _.map(resp.data, _this.extend);\n    })\n\n    _this.extend = function(e) {\n        var z = _.assign(_.clone(base), e)\n        console.log(z, e);\n        return z;\n    }\n\n    _this.save = function() {\n        edisonAPI.combo.save($scope.pl).then(function(resp) {\n            $scope.pl = _.map(resp.data, _this.extend);\n            LxNotificationService.success(\"Les produits on été mis a jour\");\n        }, function(err) {\n            LxNotificationService.error(\"Une erreur est survenu (\" + JSON.stringify(err.data) + ')');\n            //  edisonAPI.combo.save($scope.plSave);\n        })\n    }\n    _this.remove = function(obj) {\n        $scope.pl.splice(_.findIndex($scope.pl, '_id', obj._id), 1);\n    }\n\n    _this.getInter = function(prods)  {\n        var x = _.clone(base)\n        x.produits = prods.produits;\n        return x;\n    }\n\n    _this.add = function() {\n        $scope.pl.push({\n            produits: [],\n            title: '',\n            open: true,\n            text: \"\"\n        })\n    }\n\n\n\n}\nangular.module('edison').controller('editCombos', editCombos);\n","var editComptes = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('grand Comptes');\n\n    edisonAPI.compte.list().then(function(resp) {\n        $scope.pl = resp.data\n        console.log($scope.pl)\n    })\n\n\n    _this.save = function() {\n        edisonAPI.compte.save($scope.pl).then(function(resp) {\n            LxNotificationService.success(\"Les comptes on été mis a jour\");\n        }, function(err) {\n            LxNotificationService.error(\"Une erreur est survenu (\" + JSON.stringify(err.data) + ')');\n        })\n    }\n    _this.remove = function(obj) {\n        $scope.pl.splice(_.findIndex($scope.pl, '_id', obj._id), 1);\n    }\n}\n\nangular.module('edison').controller('editComptes', editComptes);\n","var editProducts = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Produits');\n\n\n    var single = function(e) {\n        e.single = (_(e.desc).deburr().toLowerCase() !== _(e.title).deburr().toLowerCase())\n        return e;\n    }\n\n    edisonAPI.product.list().then(function(resp) {\n        $scope.pl = _.map(resp.data, single);\n    })\n\n    _this.remove = function(obj) {\n        $scope.pl.splice(_.findIndex($scope.pl, '_id', obj._id), 1);\n    }\n\n    _this.save = function() {\n        edisonAPI.product.save($scope.pl).then(function(resp) {\n            $scope.pl = _.map(resp.data, single);\n            LxNotificationService.success(\"Les produits on été mis a jour\");\n        }, function(err) {\n            LxNotificationService.error(\"Une erreur est survenu (\" + JSON.stringify(err.data) + ')');\n        })\n    }\n\n    /* $scope.$watch('pl', function(curr, prev) {\n         if (curr && prev && !_.isEqual(prev, curr)) {\n             save()\n         }\n     }, true)*/\n\n\n}\nangular.module('edison').controller('editProducts', editProducts);\n","var editSignalements = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Signalements');\n\n\n    edisonAPI.signal.list().then(function(resp) {\n        $scope.pl = resp.data;\n    })\n\n    _this.remove = function(_id) {\n        var i = _.findIndex($scope.pl, '_id', _id)\n        $scope.pl.splice(i, 1);\n    }\n    _this.save = function() {\n        edisonAPI.signal.save($scope.pl).then(function(resp) {\n            $scope.pl = resp.data;\n            LxNotificationService.success(\"Les produits on été mis a jour\");\n        }, function(err) {\n            LxNotificationService.error(\"Une erreur est survenu (\" + JSON.stringify(err.data) + ')');\n        })\n    }\n\n\n}\nangular.module('edison').controller('editSignalements', editSignalements);\n","var editUsers = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxNotificationService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('Utilisateurs');\n\n\n\n    edisonAPI.users.list().then(function(resp) {\n        $scope.usrs = resp.data\n    })\n\n    _this.save = function() {\n        edisonAPI.users.save($scope.usrs).then(function() {\n            LxNotificationService.success(\"Les utilisateurs on été mis a jour\");\n        }, function(err) {\n            LxNotificationService.error(\"Une erreur est survenu (\" + JSON.stringify(err.data) + ')');\n        })\n    }\n    _this.remove = function(obj) {\n        $scope.usrs.splice(_.findIndex($scope.usrs, '_id', obj._id), 1);\n    }\n\n\n}\nangular.module('edison').controller('editUsers', editUsers);\n","var telephoneMatch = function(TabContainer, edisonAPI, $rootScope, $scope, $location, LxProgressService, socket) {\n    \"use strict\";\n    var _this = this;\n    _this.tab = TabContainer.getCurrentTab();\n    _this.tab.setTitle('TelMatch');\n    $scope.__txt_tel = $rootScope.__txt_tel\n    $rootScope.getTelMatch = function() {\n        LxProgressService.circular.show('#5fa2db', '#globalProgress');\n        $rootScope.__txt_tel = $scope.__txt_tel\n        edisonAPI.intervention.getTelMatch({\n            q: $rootScope.__txt_tel\n        }).then(_.noop, function() {\n        LxProgressService.circular.hide()\n\n        })\n    }\n\n    socket.on('intervention_db_telMatches', function(data) {\n        $rootScope.globalProgressCounter = data + '%';\n    })\n\n    socket.on('telephoneMatch', function(data) {\n        $rootScope.globalProgressCounter = \"\"\n        LxProgressService.circular.hide()\n        $scope.resp = data\n    })\n\n}\nangular.module('edison').controller('telephoneMatch', telephoneMatch);\n"],"sourceRoot":"/source/"}