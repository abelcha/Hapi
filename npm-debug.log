0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'memwatch' ]
2 info using npm@2.9.0
3 info using node@v2.3.0
4 verbose install initial load of /Users/abelchalier/Desktop/EDSN/package.json
5 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/Faker/package.json
6 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/MD5/package.json
7 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/async/package.json
8 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/body-parser/package.json
9 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/browserify/package.json
10 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/bson/package.json
11 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/chai/package.json
12 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/chai-http/package.json
13 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/chai-string/package.json
14 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/colors/package.json
15 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/compression/package.json
16 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/connect-redis-sessions/package.json
17 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/cookie/package.json
18 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/cookie-parser/package.json
19 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/cron-emitter/package.json
20 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/cron-parser/package.json
21 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/deep-diff/package.json
22 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/dropbox/package.json
23 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/ejs/package.json
24 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/express/package.json
25 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/glob/package.json
26 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp/package.json
27 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-concat/package.json
28 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-jshint/package.json
29 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-minify-css/package.json
30 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-rename/package.json
31 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-sourcemaps/package.json
32 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/gulp-util/package.json
33 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/html-entities/package.json
34 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/html-pdf/package.json
35 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/jshint/package.json
36 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/jshint-stylish/package.json
37 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/kue/package.json
38 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/lodash/package.json
39 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/milliseconds/package.json
40 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/mime/package.json
41 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/moment/package.json
42 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/mongoose/package.json
43 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/multer/package.json
44 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/postmark/package.json
45 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/pretty-error/package.json
46 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/redis/package.json
47 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/redis-rstream/package.json
48 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/request/package.json
49 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/request-promise/package.json
50 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/rwlock/package.json
51 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/sanitize-html/package.json
52 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/should/package.json
53 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/sinon/package.json
54 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/socket.io/package.json
55 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/supertest/package.json
56 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/uuid/package.json
57 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/vinyl-buffer/package.json
58 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/vinyl-source-stream/package.json
59 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/waitress/package.json
60 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/watchify/package.json
61 verbose installManyTop reading scoped package data from /Users/abelchalier/Desktop/EDSN/node_modules/xs/package.json
62 verbose readDependencies loading dependencies from /Users/abelchalier/Desktop/EDSN/package.json
63 silly cache add args [ 'memwatch', null ]
64 verbose cache add spec memwatch
65 silly cache add parsed spec { raw: 'memwatch',
65 silly cache add   scope: null,
65 silly cache add   name: 'memwatch',
65 silly cache add   rawSpec: '',
65 silly cache add   spec: '*',
65 silly cache add   type: 'range' }
66 silly addNamed memwatch@*
67 verbose addNamed "*" is a valid semver range for memwatch
68 silly addNameRange { name: 'memwatch', range: '*', hasData: false }
69 silly mapToRegistry name memwatch
70 silly mapToRegistry using default registry
71 silly mapToRegistry registry https://registry.npmjs.org/
72 silly mapToRegistry uri https://registry.npmjs.org/memwatch
73 verbose addNameRange registry:https://registry.npmjs.org/memwatch not in flight; fetching
74 verbose request uri https://registry.npmjs.org/memwatch
75 verbose request no auth needed
76 info attempt registry request try #1 at 20:46:13
77 verbose request using bearer token for auth
78 verbose request id 64c6fe4e52464d5c
79 verbose etag "35135BRVCS9QX3OPE3BTO94D7"
80 http request GET https://registry.npmjs.org/memwatch
81 http 304 https://registry.npmjs.org/memwatch
82 silly get cb [ 304,
82 silly get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
82 silly get     etag: '"35135BRVCS9QX3OPE3BTO94D7"',
82 silly get     'cache-control': 'max-age=60',
82 silly get     'accept-ranges': 'bytes',
82 silly get     date: 'Tue, 16 Jun 2015 18:46:14 GMT',
82 silly get     via: '1.1 varnish',
82 silly get     connection: 'keep-alive',
82 silly get     'x-served-by': 'cache-fra1239-FRA',
82 silly get     'x-cache': 'MISS',
82 silly get     'x-cache-hits': '0',
82 silly get     'x-timer': 'S1434480374.275035,VS0,VE199' } ]
83 verbose etag https://registry.npmjs.org/memwatch from cache
84 verbose get saving memwatch to /Users/abelchalier/.npm/registry.npmjs.org/memwatch/.cache.json
85 silly addNameRange number 2 { name: 'memwatch', range: '*', hasData: true }
86 silly addNameRange versions [ 'memwatch',
86 silly addNameRange   [ '0.1.0',
86 silly addNameRange     '0.1.1',
86 silly addNameRange     '0.1.2',
86 silly addNameRange     '0.1.3',
86 silly addNameRange     '0.1.4',
86 silly addNameRange     '0.1.5',
86 silly addNameRange     '0.2.0',
86 silly addNameRange     '0.2.1',
86 silly addNameRange     '0.2.2' ] ]
87 silly addNamed memwatch@0.2.2
88 verbose addNamed "0.2.2" is a plain semver version for memwatch
89 silly cache afterAdd memwatch@0.2.2
90 verbose afterAdd /Users/abelchalier/.npm/memwatch/0.2.2/package/package.json not in flight; writing
91 verbose afterAdd /Users/abelchalier/.npm/memwatch/0.2.2/package/package.json written
92 silly install resolved [ { name: 'memwatch',
92 silly install resolved     description: 'Keep an eye on your memory usage, and discover and isolate leaks.',
92 silly install resolved     version: '0.2.2',
92 silly install resolved     author: { name: 'Lloyd Hilaiel', url: 'http://lloyd.io' },
92 silly install resolved     engines: { node: '>= 0.6.0' },
92 silly install resolved     repository:
92 silly install resolved      { type: 'git',
92 silly install resolved        url: 'https://github.com/lloyd/node-memwatch.git' },
92 silly install resolved     main: 'include.js',
92 silly install resolved     licenses: [ [Object] ],
92 silly install resolved     bugs: { url: 'https://github.com/lloyd/node-memwatch/issues' },
92 silly install resolved     scripts: { install: 'node-gyp rebuild', test: 'mocha tests' },
92 silly install resolved     devDependencies: { mocha: '1.2.2', should: '0.6.3', 'node-gyp': '0.5.7' },
92 silly install resolved     contributors: [ [Object], [Object], [Object] ],
92 silly install resolved     readme: '`node-memwatch`: Leak Detection and Heap Diffing for Node.JS\n============================================================\n\n[![Build Status](https://secure.travis-ci.org/lloyd/node-memwatch.png)](http://travis-ci.org/lloyd/node-memwatch)\n\n`node-memwatch` is here to help you detect and find memory leaks in\nNode.JS code.  It provides:\n\n- A `leak` event, emitted when it appears your code is leaking memory.\n\n- A `stats` event, emitted occasionally, giving you\n  data describing your heap usage and trends over time.\n\n- A `HeapDiff` class that lets you compare the state of your heap between\n  two points in time, telling you what has been allocated, and what\n  has been released.\n\n\nInstallation\n------------\n\n- `npm install memwatch`\n\nor\n\n- `git clone git://github.com/lloyd/node-memwatch.git`\n\n\nDescription\n-----------\n\nThere are a growing number of tools for debugging and profiling memory\nusage in Node.JS applications, but there is still a need for a\nplatform-independent native module that requires no special\ninstrumentation.  This module attempts to satisfy that need.\n\nTo get started, import `node-memwatch` like so:\n\n```javascript\nvar memwatch = require(\'memwatch\');\n```\n\n### Leak Detection\n\nYou can then subscribe to `leak` events.  A `leak` event will be\nemitted when your heap usage has increased for five consecutive\ngarbage collections:\n\n```javascript\nmemwatch.on(\'leak\', function(info) { ... });\n```\n\nThe `info` object will look something like:\n\n```javascript\n{ start: Fri, 29 Jun 2012 14:12:13 GMT,\n  end: Fri, 29 Jun 2012 14:12:33 GMT,\n  growth: 67984,\n  reason: \'heap growth over 5 consecutive GCs (20s) - 11.67 mb/hr\' }\n```\n\n\n### Heap Usage\n\nThe best way to evaluate your memory footprint is to look at heap\nusage right aver V8 performs garbage collection.  `memwatch` does\nexactly this - it checks heap usage only after GC to give you a stable\nbaseline of your actual memory usage.\n\nWhen V8 performs a garbage collection (technically, we\'re talking\nabout a full GC with heap compaction), `memwatch` will emit a `stats`\nevent.\n\n```javascript\nmemwatch.on(\'stats\', function(stats) { ... });\n```\n\nThe `stats` data will look something like this:\n\n```javascript\n{\n  "num_full_gc": 17,\n  "num_inc_gc": 8,\n  "heap_compactions": 8,\n  "estimated_base": 2592568,\n  "current_base": 2592568,\n  "min": 2499912,\n  "max": 2592568,\n  "usage_trend": 0\n}\n```\n\n`estimated_base` and `usage_trend` are tracked over time.  If usage\ntrend is consistently positive, it indicates that your base heap size\nis continuously growing and you might have a leak.\n\nV8 has its own idea of when it\'s best to perform a GC, and under a\nheavy load, it may defer this action for some time.  To aid in\nspeedier debugging, `memwatch` provides a `gc()` method to force V8 to\ndo a full GC and heap compaction.\n\n\n### Heap Diffing\n\nSo far we have seen how `memwatch` can aid in leak detection.  For\nleak isolation, it provides a `HeapDiff` class that takes two snapshots\nand computes a diff between them.  For example:\n\n```javascript\n// Take first snapshot\nvar hd = new memwatch.HeapDiff();\n\n// do some things ...\n\n// Take the second snapshot and compute the diff\nvar diff = hd.end();\n```\n\nThe contents of `diff` will look something like:\n\n```javascript\n{\n  "before": { "nodes": 11625, "size_bytes": 1869904, "size": "1.78 mb" },\n  "after":  { "nodes": 21435, "size_bytes": 2119136, "size": "2.02 mb" },\n  "change": { "size_bytes": 249232, "size": "243.39 kb", "freed_nodes": 197,\n    "allocated_nodes": 10007,\n    "details": [\n      { "what": "String",\n        "size_bytes": -2120,  "size": "-2.07 kb",  "+": 3,    "-": 62\n      },\n      { "what": "Array",\n        "size_bytes": 66687,  "size": "65.13 kb",  "+": 4,    "-": 78\n      },\n      { "what": "LeakingClass",\n        "size_bytes": 239952, "size": "234.33 kb", "+": 9998, "-": 0\n      }\n    ]\n  }\n```\n\nThe diff shows that during the sample period, the total number of\nallocated `String` and `Array` classes decreased, but `Leaking Class`\ngrew by 9998 allocations.  Hmmm.\n\nYou can use `HeapDiff` in your `on(\'stats\')` callback; even though it\ntakes a memory snapshot, which triggers a V8 GC, it will not trigger\nthe `stats` event itself.  Because that would be silly.\n\n\nFuture Work\n-----------\n\nPlease see the Issues to share suggestions and contribute!\n\n\nLicense\n-------\n\nhttp://wtfpl.org\n',
92 silly install resolved     readmeFilename: 'README.md',
92 silly install resolved     _id: 'memwatch@0.2.2',
92 silly install resolved     dist:
92 silly install resolved      { shasum: '779e8cd982532b6221b6ed1c1269098bee16f92c',
92 silly install resolved        tarball: 'http://registry.npmjs.org/memwatch/-/memwatch-0.2.2.tgz' },
92 silly install resolved     _from: 'memwatch@*',
92 silly install resolved     _npmVersion: '1.2.14',
92 silly install resolved     _npmUser: { name: 'lloyd', email: 'lloyd@hilaiel.com' },
92 silly install resolved     maintainers: [ [Object] ],
92 silly install resolved     directories: {},
92 silly install resolved     _shasum: '779e8cd982532b6221b6ed1c1269098bee16f92c',
92 silly install resolved     _resolved: 'https://registry.npmjs.org/memwatch/-/memwatch-0.2.2.tgz',
92 silly install resolved     gypfile: true,
92 silly install resolved     homepage: 'https://github.com/lloyd/node-memwatch' } ]
93 info install memwatch@0.2.2 into /Users/abelchalier/Desktop/EDSN
94 info installOne memwatch@0.2.2
95 verbose installOne of memwatch to /Users/abelchalier/Desktop/EDSN not in flight; installing
96 verbose lock using /Users/abelchalier/.npm/_locks/memwatch-af5e95cab993d1a6.lock for /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
97 silly install write writing memwatch 0.2.2 to /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
98 verbose unbuild node_modules/memwatch
99 silly gentlyRm /Users/abelchalier/Desktop/EDSN/node_modules/memwatch is being purged from base /Users/abelchalier/Desktop/EDSN
100 verbose gentlyRm don't care about contents; nuking /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
101 verbose tar unpack /Users/abelchalier/.npm/memwatch/0.2.2/package.tgz
102 verbose tar unpacking to /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
103 silly gentlyRm /Users/abelchalier/Desktop/EDSN/node_modules/memwatch is being purged
104 verbose gentlyRm don't care about contents; nuking /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
105 silly gunzTarPerm modes [ '755', '644' ]
106 silly gunzTarPerm extractEntry package.json
107 silly gunzTarPerm extractEntry .npmignore
108 silly gunzTarPerm extractEntry README.md
109 silly gunzTarPerm extractEntry tests.js
110 silly gunzTarPerm extractEntry foo.js
111 silly gunzTarPerm extractEntry include.js
112 silly gunzTarPerm extractEntry .travis.yml
113 silly gunzTarPerm extractEntry ChangeLog
114 silly gunzTarPerm extractEntry #wscript#
115 silly gunzTarPerm extractEntry binding.gyp
116 silly gunzTarPerm extractEntry src/heapdiff.cc
117 silly gunzTarPerm extractEntry src/heapdiff.hh
118 silly gunzTarPerm extractEntry src/init.cc
119 silly gunzTarPerm extractEntry src/memwatch.cc
120 silly gunzTarPerm extractEntry src/memwatch.hh
121 silly gunzTarPerm extractEntry src/platformcompat.hh
122 silly gunzTarPerm extractEntry src/util.cc
123 silly gunzTarPerm extractEntry src/util.hh
124 silly gunzTarPerm extractEntry examples/basic_heapdiff.js
125 silly gunzTarPerm extractEntry examples/do_nothing_server.js
126 silly gunzTarPerm extractEntry examples/slightly_leaky.js
127 verbose write writing to /Users/abelchalier/Desktop/EDSN/node_modules/memwatch/package.json
128 info preinstall memwatch@0.2.2
129 verbose readDependencies loading dependencies from /Users/abelchalier/Desktop/EDSN/node_modules/memwatch/package.json
130 verbose readDependencies loading dependencies from /Users/abelchalier/Desktop/EDSN/node_modules/memwatch/package.json
131 silly install resolved []
132 verbose about to build /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
133 info build /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
134 info linkStuff memwatch@0.2.2
135 silly linkStuff memwatch@0.2.2 has /Users/abelchalier/Desktop/EDSN/node_modules as its parent node_modules
136 verbose linkBins memwatch@0.2.2
137 verbose linkMans memwatch@0.2.2
138 verbose rebuildBundles memwatch@0.2.2
139 info install memwatch@0.2.2
140 verbose unsafe-perm in lifecycle true
141 info memwatch@0.2.2 Failed to exec install script
142 verbose unlock done using /Users/abelchalier/.npm/_locks/memwatch-af5e95cab993d1a6.lock for /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
143 verbose stack Error: memwatch@0.2.2 install: `node-gyp rebuild`
143 verbose stack Exit status 1
143 verbose stack     at EventEmitter.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/lifecycle.js:213:16)
143 verbose stack     at emitTwo (events.js:87:13)
143 verbose stack     at EventEmitter.emit (events.js:172:7)
143 verbose stack     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/spawn.js:24:14)
143 verbose stack     at emitTwo (events.js:87:13)
143 verbose stack     at ChildProcess.emit (events.js:172:7)
143 verbose stack     at maybeClose (internal/child_process.js:764:16)
143 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)
144 verbose pkgid memwatch@0.2.2
145 verbose cwd /Users/abelchalier/Desktop/EDSN
146 error Darwin 14.3.0
147 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "install" "memwatch"
148 error node v2.3.0
149 error npm  v2.9.0
150 error code ELIFECYCLE
151 error memwatch@0.2.2 install: `node-gyp rebuild`
151 error Exit status 1
152 error Failed at the memwatch@0.2.2 install script 'node-gyp rebuild'.
152 error This is most likely a problem with the memwatch package,
152 error not with npm itself.
152 error Tell the author that this fails on your system:
152 error     node-gyp rebuild
152 error You can get their info via:
152 error     npm owner ls memwatch
152 error There is likely additional logging output above.
153 verbose exit [ 1, true ]
154 verbose unbuild node_modules/memwatch
155 info preuninstall memwatch@0.2.2
156 info uninstall memwatch@0.2.2
157 verbose unbuild rmStuff memwatch@0.2.2 from /Users/abelchalier/Desktop/EDSN/node_modules
158 info postuninstall memwatch@0.2.2
159 silly gentlyRm /Users/abelchalier/Desktop/EDSN/node_modules/memwatch is being purged from base /Users/abelchalier/Desktop/EDSN
160 verbose gentlyRm don't care about contents; nuking /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
161 silly vacuum-fs purging /Users/abelchalier/Desktop/EDSN/node_modules/memwatch
162 silly vacuum-fs quitting because other entries in /Users/abelchalier/Desktop/EDSN/node_modules
